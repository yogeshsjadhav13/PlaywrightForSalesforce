const { expect } = require('@playwright/test');

class FACartPage {

    constructor(page) {
        this.page = page;
        this.cartFrame = this.page.frameLocator('iframe[name*="vfFrameId"]').first();
        this.searchbutton = this.cartFrame.getByPlaceholder('Sök').first();
        //Cart page objects
        this.cartValideraVarukorgenButton = this.cartFrame.locator("//button[contains(text(),'Validera priser') or contains(text(),'Validera varukorgen')]");
        this.cartSlutforKonfiguration = this.cartFrame.locator("//button[contains(text(),'Slutför konfiguration')]");
        this.cartStangKonfiguration = this.cartFrame.locator("//button[contains(text(),'Stäng konfiguration')]");
        this.cartKvalificeraProdukter = this.cartFrame.getByRole('button', { name: 'Kvalificera produkter' });
        this.KvalificeraProdukterLeveranskontroll = this.cartFrame.getByRole('button', { name: 'Leveranskontroll' });
        this.KvalificeraProdukterSammanstallning = this.cartFrame.getByRole('button', { name: 'Sammanställning' });
        this.KvalificeraProdukter = this.cartFrame.getByRole('cell', { name: 'Kvalificera produkter' }).getByRole('button');
        this.KvalificeraProdukterHeading = this.cartFrame.getByRole('heading', { name: 'Kvalificera produkter', exact: true });
        this.avbrytButton = this.cartFrame.getByRole('button', { name: 'Avbryt' });
        this.cartSkapaOffertdokumentButton = this.cartFrame.locator("//button[@id='-import-btn' and (@title='Skapa offertdokument' or contains(text(),'Generate Offer Quote'))]");
        this.cartNollstallOffertkvantitetButton = this.cartFrame.locator("//button[contains(text(),'Nollställ offertkvantitet') or contains(text(),'Nollst_ll_offertkvantitet')]");
        this.cartSkapaOffertDokumentErrorMessage = this.cartFrame.locator("//div[@class='slds-col slds-align-middle']/h2").first();
        this.cartSkapaOffertDokumentErrorMessageCloseButton = this.cartFrame.locator("//div[@role='alert']//button[contains(@class,'slds-notify__close') and contains(@ng-click,'hide')]").first();
        //Product configuration attributes
        this.configureProductHelpText = this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").first();
        this.configureBundleProductHelpText = this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'showBundlesText')]").first();
        this.configureAntalTextbox = this.cartFrame.locator("//label[contains(normalize-space(.), 'Antal för basnivå') or contains(normalize-space(.), 'Number of Users') or contains(normalize-space(.), 'Antal')]//following-sibling::div//input[contains(@name,'productconfig_field_')]");
        this.configureTotalAntalSiterTextbox = this.cartFrame.locator("//label[contains(normalize-space(.), 'Total antal siter')]//following-sibling::div//input[contains(@name,'productconfig_field_')]");
        this.configureAntalAccessPunkterTextbox = this.cartFrame.locator("//label[contains(normalize-space(.), 'Antal Access punkter')]//following-sibling::div//input[contains(@name,'productconfig_field_')]");
        this.configureAntalSwitcharTextbox = this.cartFrame.locator("//label[contains(normalize-space(.), 'Antal switchar')]//following-sibling::div//input[contains(@name,'productconfig_field_')]");
        this.configureAvtalstidPicklist = this.cartFrame.locator("//label[contains(normalize-space(.),'Avtalstid') or contains(normalize-space(.),'Commitment Period')]//following-sibling::div//select[contains(@name,'productconfig_field_') and contains(@class,'slds-select')]");
        this.configreSubsidizedPicklist = this.cartFrame.locator("//label[contains(normalize-space(.),'Subventionerat') or contains(normalize-space(.),'Subsidized')]//following-sibling::div//select[contains(@name,'productconfig_field_') and contains(@class,'slds-select')]");
        this.configureValjMobilavtalPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Välj mobilavtal') and contains(@ng-show,'SC_OFFER')]//following-sibling::div//select");
        this.configureStatistikPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Statistik') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureKundanpassadkonfigurationPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Kundanpassad konfiguration') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureTPPSlutanvandarsupportPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'TPP Slutanvändarsupport') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureADIntegrationPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'AD-integration') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureTeliaSvarsservicePicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Telia Svarsservice') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureWebkatalogPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Webkatalog') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configureLagringstidForInspelningPicklist = this.cartFrame.locator("//div[contains(normalize-space(.),'Lagringstid för inspelning') and contains(@ng-show,'TPP_OFFER')]/div/select");
        this.configreAntalArendenPicklist = this.cartFrame.locator("//label[contains(normalize-space(.),'Antal ärenden/år') or contains(normalize-space(.),'Number of Users')]//following-sibling::div//select[contains(@name,'productconfig_field_') and contains(@class,'slds-select')]");
        this.configreKommentarTillAvtalshandlaggareTextarea = this.cartFrame.locator("//label[contains(normalize-space(.), 'Kommentar till avtalshandläggare') or contains(normalize-space(.), 'Comment(Agreement handler)')]//following-sibling::div//textarea");
        this.configureSparaSavingButton = this.cartFrame.locator("//button[normalize-space(.)='Spara Saving']");
        this.configureCloseButton = this.cartFrame.locator("//div[@ng-controller='teliaswedenCPQCartItemConfigController']//button[normalize-space(.)='Avbryt' and contains(@class,'slds-button')]").first();
        this.configureBindingstidPicklist = this.cartFrame.locator("//label[contains(normalize-space(.),'Bindningstid') or contains(normalize-space(.),'Binding Time')]//following-sibling::div//select[contains(@name,'productconfig_field_') and contains(@class,'slds-select')]");
        this.configureRabattPaExternaStadsnatPicklist = this.cartFrame.locator("//label[contains(normalize-space(.),'Rabatt på externa stadsnät')]//following-sibling::div//select[contains(@name,'productconfig_field_') and contains(@class,'slds-select')]");
        this.configureAlertBoxOkButton = this.cartFrame.locator("//section[@role='alertdialog']//button[text()='Ok']");
        //One time fee negotiation window
        this.ChangeOneTimeFeeTextbox = this.cartFrame.locator("//input[@id='adjustment-input-01' and contains(@ng-change,'handlePercentage')]");
        this.ChangeOneTimeFeePicklist = this.cartFrame.locator("//select[contains(@ng-change,'handlePercentage')]");
        this.ApplyOneTimeFeeButton = this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]");
        //OperatorConnect error message objects
        this.OperatorConnectNoMobilErrorMessage1 = this.cartFrame.locator("//div[@ng-show='operatorConnectValidation']//div[contains(@id,'content')]/p[text()='Observera att kunden behöver ha ett mobilt Ram-avtal för att kunna avtala om Operator Connect.']");
        this.OperatorConnectNoMobilErrorMessage2 = this.cartFrame.locator("//div[@ng-show='operatorConnectValidation']//div[contains(@id,'content')]/p[2][text()='Du behöver lägga till Mobilt i förhandlingen för att kunna fortsätta.']");
        this.OperatorConnectNoMobilErrorMessageCloseButton = this.cartFrame.locator("//div[@ng-show='operatorConnectValidation']//button[@ng-click='closeAddOnToast()']");
        //SmartConnect error message objects
        this.SmartConnectNoMobilErrorMessage = this.cartFrame.locator("//div[@ng-show='smartConnectValidation']//div[contains(@id,'content')]/p[text()='Observera att kunden behöver ha ett mobilt ramavtal för att kunna avtala om Smart Connect!']");
        this.SmartConnectNoMobilErrorMessageCloseButton = this.cartFrame.locator("//div[@ng-show='smartConnectValidation']//button[@ng-click='closeAddOnToast()']");
        //Slutfor Konfiguration process page objects
        this.andraAvtalsvillkorHeading = this.page.getByRole('heading', { name: 'Ändra avtalsvillkor' });
        this.andraAvtalsvillkorDisplayMessage1 = this.page.getByText('Vill du förhandla kundunika villkor?');
        this.andraAvtalsvillkorDisplayMessage2 = this.page.getByText('Var vänlig observera att detta bör vara en avvikelse – du bör alltid skicka avta');
        this.andraAvtalsvillkorJaCheckbox = this.page.locator("//label[normalize-space(.)='Ja' and contains(@class,'slds-radio')]/span[@class='slds-radio_faux']");
        this.andraAvtalsvillkorNejCheckbox = this.page.locator("//label[normalize-space(.)='Nej' and contains(@class,'slds-radio')]/span[@class='slds-radio_faux']");
        this.nextSwedishButton = this.page.getByRole('button', { name: 'Nästa' });
        this.quoteOffertnamnText = this.page.locator("//span[text()='Offertnamn']//..//..//..//span[@class='uiOutputText']");
        this.quoteStatusText = this.page.locator("//div[contains(@class,'active') and contains(@class,'window')]//span[text()='Status']//..//..//..//lightning-formatted-text");
        //CRM Fiber Cart Blakalkyl section
        this.BlakalkylRevenues = this.cartFrame.locator('#Revenues');
        this.BlakalkylOpex = this.cartFrame.locator('#Opex');
        this.BlakalkylInfra = this.cartFrame.locator('#Infra');
        this.BlakalkylContractTerm = this.cartFrame.locator('#Contract_Term');
        this.BlakalkylUpsell = this.cartFrame.locator('#Upsell');
        this.BlakalkylDepreciation = this.cartFrame.locator('#Depreciation');
        this.BlakalkylKundplacerad = this.cartFrame.locator('#Kundplacerad');
        this.Blakalkyldcf = this.cartFrame.locator('#dcf');
        this.BlakalkylInvestment = this.cartFrame.locator('#Investment');
        this.BlakalkylPayback = this.cartFrame.locator('#Payback');
        this.Blakalkylengang = this.cartFrame.locator('#engang');
        this.BlakalkylPrisBB = this.cartFrame.locator('#PrisBB');
        this.BlakalkylPrisTV = this.cartFrame.locator('#PrisTV');
        this.BlakalkylKalkyleraEBITSpara = this.cartFrame.getByRole('button', { name: 'Kalkylera EBIT & spara' });
        this.BlakalkylGaVidare = this.cartFrame.getByRole('button', { name: 'Gå vidare' });
        this.BlakalkylGaTillbaka = this.cartFrame.getByRole('button', { name: 'Gå tillbaka' });
    }


    async AddProductToTheCart(TestData) {
        var productList;
        if (TestData.get("SalesFlowType") === "NewSales" || TestData.get("SalesFlowType") === "LegacyNegotiation" || TestData.get("SalesFlowType") === "UtilizerBreakout" || TestData.get("SalesFlowType") === "Tillaggsforhandling") {
            productList = (TestData.get("Products")).split(";");
        } else if (TestData.get("SalesFlowType") === "Renegotiation") {
            if (Boolean(TestData.get("NewProductsToAddDuringRenegotiation"))) {
                productList = (TestData.get("NewProductsToAddDuringRenegotiation")).split(";");
            } else {
                productList = [];
                productList.length = 0;
            }
        }
        for (let i = 0; i < productList.length; i++) {
            await this.searchbutton.click();
            await this.searchbutton.fill(productList[i]);
            await this.cartFrame.locator("//p[normalize-space(.)='" + productList[i] + "']").first().click();
            await this.cartFrame.locator("//p[normalize-space(.)='" + productList[i] + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
            //await this.cartFrame.locator("//h2[@class='slds-text-heading--small' and contains(text(),'Uppdaterad tjänst: " + productList[i] + "')]").click();
            await this.cartFrame.locator("//div[contains(@class,'cpq-item-no-children') and text()='" + productList[i] + "']//..//../div[@class='cpq-product-icon-block']/div[@title='Add']").first().click();
        }

    }


    async AddSingleProductToTheCart(ProductName) {
        await this.searchbutton.click();
        await this.searchbutton.fill(ProductName);
        await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']").first().click();
        await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
        await this.cartFrame.locator("//div[contains(@class,'cpq-item-no-children') and text()='" + ProductName + "']//..//../div[@class='cpq-product-icon-block']/div[@title='Add']").first().click();
    }

    async VerifyErrorOnAddProductToTheCart(TestData) {
        var productList, ProductName;
        productList = (TestData.get("ExistingProducts")).split(";");
        for (let i = 0; i < productList.length; i++) {
            await this.searchbutton.click();
            await this.searchbutton.fill(productList[i]);
            await this.cartFrame.locator("//p[normalize-space(.)='" + productList[i] + "']").first().click();
            await this.cartFrame.locator("//p[normalize-space(.)='" + productList[i] + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
            await this.cartFrame.locator("//div[@class='slds-col slds-align-middle']/p[contains(text(),'Samma erbjudande kan inte läggas till flera gånger')]").click();
            await expect(this.cartSkapaOffertDokumentErrorMessage).toContainText('Failed to add ' + productList[i]);
            if (productList[i] === "Mobilupplägg TOTAL") {
                ProductName = "Mobilupplägg All-IN+";
                await this.searchbutton.click();
                await this.searchbutton.fill(ProductName);
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']").first().click();
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
                await this.cartFrame.locator("//div[@class='slds-col slds-align-middle']/p[contains(text(),'Samma erbjudande kan inte läggas till flera gånger')]").click();
                await expect(this.cartSkapaOffertDokumentErrorMessage).toContainText('Failed to add ' + ProductName);
            } else if (productList[i] === "Mobilupplägg All-IN+") {
                ProductName = "Mobilupplägg TOTAL";
                await this.searchbutton.click();
                await this.searchbutton.fill(ProductName);
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']").first().click();
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
                await this.cartFrame.locator("//div[@class='slds-col slds-align-middle']/p[contains(text(),'Samma erbjudande kan inte läggas till flera gånger')]").click();
                await expect(this.cartSkapaOffertDokumentErrorMessage).toContainText('Failed to add ' + ProductName);
            }
            if (productList[i] === "IT-support Standard" || productList[i] === "IT-support Plus" || productList[i] === "IT-avdelning" || productList[i] === "IT-avdelning Start") {
                if (productList[i] === "IT-support Standard" || productList[i] === "IT-support Plus") {
                    ProductName = "IT-avdelning";
                }
                if (productList[i] === "IT-avdelning" || productList[i] === "IT-avdelning Start") {
                    ProductName = "IT-support Standard";
                }
                await this.searchbutton.click();
                await this.searchbutton.fill(ProductName);
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']").first().click();
                await this.cartFrame.locator("//p[normalize-space(.)='" + ProductName + "']//..//..//..//button[normalize-space(.)='Lägg till']").first().click();
                await this.cartFrame.locator("//div[@class='slds-col slds-align-middle']/p[contains(text(),'Samma erbjudande kan inte läggas till flera gånger')]").click();
                await expect(this.cartSkapaOffertDokumentErrorMessage).toContainText('Failed to add ' + ProductName);
            }
        }
    }


    async DeleteSingleProductToTheCart(ProductName) {
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//parent::button//parent::div//parent::div//parent::div//parent::div//parent::div//a[@ng-click='importedScope.delete(null, obj)']").click({ timeout: 5000 });
        await this.cartFrame.locator("//button[text()='Ta bort']").click();
        await this.cartFrame.locator("//h2[contains(text(),'Borttagen tjänst: " + ProductName + "')]").click();
    }


    async ConfigureMCSalesProductInTheCart(TestData) {
        var Product, klusters;
        if (TestData.get("SalesFlowType") === "NewSales" || TestData.get("SalesFlowType") === "LegacyNegotiation" || TestData.get("SalesFlowType") === "UtilizerBreakout" || TestData.get("SalesFlowType") === "Tillaggsforhandling") {
            Product = (TestData.get("Products")).split(";");
        } else if (TestData.get("SalesFlowType") === "Renegotiation") {
            if (Boolean(TestData.get("NewProductsToAddDuringRenegotiation"))) {
                Product = (TestData.get("NewProductsToAddDuringRenegotiation")).split(";");
            } else {
                Product = [];
                Product.length = 0;
            }
        }
        for (let i = 0; i < Product.length; i++) {
            switch (Product[i]) {
                case "Mobilupplägg TOTAL":
                    {
                        const MobilupplaggTotalSubProducts = (TestData.get("MobilupplaggTotalSubProducts")).split(";");
                        klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus, BAS;
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Mobil - Övriga Tjänster");
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggTotalSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                                await this.AddToCartSubOffer(Product[i], "Kluster PLUS");
                            }
                            if (BAS !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Jobbmobil BAS"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB")) {
                                BAS = "Yes";
                                klusters.push("Kluster BAS");
                                await this.AddToCartSubOffer(Product[i], "Kluster BAS");
                                await this.AddToCartSubOffer(Product[i], "Data Paket (BAS)");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        if (BAS === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Data Paket (BAS)");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilupplaggTotalSubProducts[j] !== "Jobbmobil BAS"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 5 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 20 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 50 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Obegränsad"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Obegränsad Plus"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Datasim"
                                && MobilupplaggTotalSubProducts[j] !== "Anslutning Klocka"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 20 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 50 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 500 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 1000 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Till Europa"
                                && MobilupplaggTotalSubProducts[j] !== "Till Grannland Företag"
                                && MobilupplaggTotalSubProducts[j] !== "Till Utland Företag"
                                && MobilupplaggTotalSubProducts[j] !== "Res Söderut"
                                && MobilupplaggTotalSubProducts[j] !== "Res Österut"
                                && MobilupplaggTotalSubProducts[j] !== "Res Västerut"
                                && MobilupplaggTotalSubProducts[j] !== "Fast IP adress"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf Bas"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 1GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 3 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 5 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 15 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 25 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 40 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 120 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Norden"
                                && MobilupplaggTotalSubProducts[j] !== "Europa 1/Världen 1"
                                && MobilupplaggTotalSubProducts[j] !== "Europa 2/Världen 2"
                                && MobilupplaggTotalSubProducts[j] !== "Världen 3"
                                && MobilupplaggTotalSubProducts[j] !== "Världen 4") {
                                await this.AddToCartSubOffer(Product[i], MobilupplaggTotalSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilupplaggTotalSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggTotalSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggTotalSubProducts[j] === "Fakturadelning"
                                || MobilupplaggTotalSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggTotalSubProducts[j] === "Fast IP adress"
                                || MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggTotalSubProducts[j] === "Till Europa"
                                || MobilupplaggTotalSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Res Söderut"
                                || MobilupplaggTotalSubProducts[j] === "Res Österut"
                                || MobilupplaggTotalSubProducts[j] === "Res Västerut"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB"
                                || MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    //R24.05 - LTAART-321 - Negotiate minute based fees
                                    if (MobilupplaggTotalSubProducts[j] === "Norden"
                                    || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                    || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                    || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                    || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                        await this.cartFrame.locator("//div[@layout-name='mc-cpq-addon-specialpriceplan']//span[@ng-if='IPResponseReceived && isMinuteBasedAddon' and contains(normalize-space(.),'För mer information om priser till utlandet: [ https://www.telia.se/foretag/om/priser ]')]").first().hover();
                                    }
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.page.waitForTimeout(2000);
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggTotalSubProducts[j] === "Anslutning Klocka" || MobilupplaggTotalSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggTotalSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        if (TestData.get("AddMobilSpecialAddon") === "Yes") {
                            for (const kluster of klusters) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//button[normalize-space(.)='Toggle Abonnemangsunika tillvalstjänster' and contains(@class,'slds-button')]").click();
                            }
                            if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "AM", "Happy");
                                }
                            } else {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "SM", "Sad");
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Mobilupplägg All-IN+":
                    {
                        const MobilupplaggAllInPlusSubProducts = (TestData.get("MobilupplaggAllInPlusSubProducts")).split(";");
                        klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus;
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Mobil - Övriga Tjänster");
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                                await this.AddToCartSubOffer(Product[i], "Kluster PLUS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil 50 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Obegränsad"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Obegränsad Plus"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Datasim"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Anslutning Klocka"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 20 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 50 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 500 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 1000 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Europa"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Grannland Företag"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Utland Företag"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Söderut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Österut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Västerut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Fast IP adress"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Norden"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Europa 1/Världen 1"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Europa 2/Världen 2"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Världen 3"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Världen 4") {
                                await this.AddToCartSubOffer(Product[i], MobilupplaggAllInPlusSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fakturadelning"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fast IP adress"
                                || MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggAllInPlusSubProducts[j] === "Till Europa"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Söderut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Österut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Västerut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    //R24.05 - LTAART-321 - Negotiate minute based fees
                                    if (MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                        await this.cartFrame.locator("//div[@layout-name='mc-cpq-addon-specialpriceplan']//span[@ng-if='IPResponseReceived && isMinuteBasedAddon' and contains(normalize-space(.),'För mer information om priser till utlandet: [ https://www.telia.se/foretag/om/priser ]')]").first().hover();
                                    }
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggAllInPlusSubProducts[j] === "Anslutning Klocka" || MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggAllInPlusSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        if (TestData.get("AddMobilSpecialAddon") === "Yes") {
                            for (const kluster of klusters) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//button[normalize-space(.)='Toggle Abonnemangsunika tillvalstjänster' and contains(@class,'slds-button')]").click();
                            }
                            if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "AM", "Happy");
                                }
                            } else {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "SM", "Sad");
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Microsoft 365":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").first().click();
                        const Microsoft365SubProducts = (TestData.get("Microsoft365SubProducts")).split(";");
                        var Microsoft365OvrigaTjanster, TilvalOffice365;
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365OvrigaTjanster !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                    || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                    || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                    || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                    || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                    || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                    || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                    || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                    || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet")) {
                                Microsoft365OvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Microsoft 365 - Övriga Tjänster");
                            }
                            if (TilvalOffice365 !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams EEA")) {
                                TilvalOffice365 = "Yes";
                            }
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] !== "Microsoft migrering e-post, max 1 domän och 3 konton"
                                && Microsoft365SubProducts[j] !== "Microsoft migrering e-post, max 1 domän och 20 konton"
                                && Microsoft365SubProducts[j] !== "Tillkommande migreringsavgift per mailkonto"
                                && Microsoft365SubProducts[j] !== "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                && Microsoft365SubProducts[j] !== "Installation Office, per enhet"
                                && Microsoft365SubProducts[j] !== "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                && Microsoft365SubProducts[j] !== "Säkerhetsanalys MS365"
                                && Microsoft365SubProducts[j] !== "Uppstartshjälp Teams, 1-10 användare"
                                && Microsoft365SubProducts[j] !== "Installation av Teams på ytterligare en enhet"
                                && Microsoft365SubProducts[j] !== "Microsoft 365 Audio Conferencing"
                                && Microsoft365SubProducts[j] !== "Microsoft Entra ID P1"
                                && Microsoft365SubProducts[j] !== "Microsoft Entra ID P2"
                                && Microsoft365SubProducts[j] !== "Enterprise Mobility + Security E3"
                                && Microsoft365SubProducts[j] !== "Enterprise Mobility + Security E5"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Phone Standard"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Shared Devices"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Rooms Pro"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams EEA") {
                                await this.AddToCartSubOffer(Product[i], Microsoft365SubProducts[j]);
                            }
                        }
                        if (Microsoft365OvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Microsoft 365 - Övriga Tjänster");
                        }
                        if (TilvalOffice365 === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Tillval - Office 365");
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet"
                                || Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                || Microsoft365SubProducts[j] === "Microsoft Teams EEA") {
                                await this.AddToCartSubOffer(Product[i], Microsoft365SubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet") {
                            } else {
                                await this.page.waitForTimeout(2000);
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[6]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").first().click();
                                const GolvPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[6]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").first().textContent();
                                const OnskadRabatt = parseInt(GolvPris);
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").first().click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").first().type((OnskadRabatt).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").first().click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").first().type((OnskadRabatt + 1).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").first().click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").first().type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.keyboard.press('Tab');
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Touchpoint":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchpointSubProducts = (TestData.get("TouchpointSubProducts")).split(";");
                        var TouchpointOvrigaTjanster;
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointOvrigaTjanster !== "Yes"
                                && (TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                    || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)")) {
                                TouchpointOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Touchpoint - Övriga Tjänster");
                                await this.toggleSubOffersInProduct(Product[i], "Touchpoint - Övriga Tjänster");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Touchpoint, Grundpaketering växel");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint, Användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint Växel");
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointSubProducts[j] !== "Touchpoint, Användare med mobilt nummer"
                                && TouchpointSubProducts[j] !== "Startkostnad"
                                && TouchpointSubProducts[j] !== "Svarsgrupp med köfunktion") {
                                await this.AddToCartSubOffer(Product[i], TouchpointSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        let NoQuantityForTP = Boolean(TestData.get("NoQuantityForTP"));
                        if (NoQuantityForTP) {
                        } else {
                            TestData.set("NoQuantityForTP", "");
                        }
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointSubProducts[j] === "Antal användare med tillvalet kalendersynk"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 10"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 20"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 40"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 60"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 80"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 100"
                                || TouchpointSubProducts[j] === "Telia Svarsservice Utökade Öppettider"
                                || TouchpointSubProducts[j] === "Telia Svarsservice Administration, antal timmar per månad"
                                || TouchpointSubProducts[j] === "Office 365 Kalendersynk"
                                || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)") {
                            } else if (TouchpointSubProducts[j] === "Softphone"
                                || TouchpointSubProducts[j] === "Telefonistöd"
                                || TouchpointSubProducts[j] === "Menystyrning"
                                || TouchpointSubProducts[j] === "Extra svarsgrupp"
                                || TouchpointSubProducts[j] === "Fast nummer till svarsgrupp"
                                || TouchpointSubProducts[j] === "Fast nummer till menystyrning"
                                || TouchpointSubProducts[j] === "Ny 10-nummerserie för fasta nummer"
                                || TouchpointSubProducts[j] === "Office 365 Integration") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                    if (TouchpointSubProducts[j] !== "Office 365 Integration") {
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                        const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                        const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                        if (NoQuantityForTP) {
                                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("0");
                                        } else {
                                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        }
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                                }
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                if (NoQuantityForTP) {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("0");
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                }
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            if (NoQuantityForTP) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("0");
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartConnectSubProducts = (TestData.get("SmartConnectSubProducts")).split(";");
                        /*let KlustersNullOrEmpty = Boolean(klusters);
                        if (KlustersNullOrEmpty) {
                        } else {
                            const Products = (TestData.get("Products")).split(";");
                            for (let iteration = 0; iteration < Products.length; iteration++) {
                                if (Products[iteration] === "Mobilupplägg All-IN+") {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else if (Products[iteration] === "Mobilupplägg TOTAL") {
                                    klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else if (Boolean(TestData.get("ExistingProducts"))) {
                                    if ((TestData.get("ExistingProducts")).includes("Mobilupplägg All-IN+")) {
                                        klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                    } else if ((TestData.get("ExistingProducts")).includes("Mobilupplägg TOTAL")) {
                                        klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                                    }
                                } else {
                                    klusters = ["Övriga mobilavtal"];
                                    //klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                }
                            }
                        }
                        for (const kluster of klusters) {
                            await this.AddToCartSubOffer(Product[i], kluster);
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }*/
                        var SCOvrigaTjanster;
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            if (SCOvrigaTjanster !== "Yes"
                                && (SmartConnectSubProducts[j] === "Baskonfiguration Smart Connect"
                                    || SmartConnectSubProducts[j] === "Tilläggskonfiguration, per ärende")) {
                                        SCOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Smart Connect - Övriga Tjänster");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Tillval användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval företag");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildningar och leveranstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        if (SCOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Smart Connect - Övriga Tjänster");
                        }
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            if (SmartConnectSubProducts[j] !== "Smart Connect Standardanvändare" && SmartConnectSubProducts[j] !== "Uppstartshjälp Smart Connect") {
                                await this.AddToCartSubOffer(Product[i], SmartConnectSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            /*
                            if (SmartConnectSubProducts[j] === "Smart Connect Standardanvändare") {
                                for (const kluster of klusters) {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("SmartConnectDiscountPercentage"))));
                                    //const OnskatPris = parseInt(MalPris) - 1;
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }*/
                            if (SmartConnectSubProducts[j] === "Smart Connect Standardanvändare" || SmartConnectSubProducts[j] === "Softphone (WebRTC)" || SmartConnectSubProducts[j] === "Extra telefonnummer" || SmartConnectSubProducts[j] === "Funktionsnummer"
                                || SmartConnectSubProducts[j] === "Kalenderintegration" || SmartConnectSubProducts[j] === "AD-integration" || SmartConnectSubProducts[j] === "API Access"
                                || SmartConnectSubProducts[j] === "Teamsintegration - Status") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                //const OnskatPris = parseInt(MalPris) - 1;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Implementering Kalenderintegration" || SmartConnectSubProducts[j] === "Implementering AD-integration"
                                || SmartConnectSubProducts[j] === "Implementering API Access" || SmartConnectSubProducts[j] === "Implementering Teamsintegration"
                                || SmartConnectSubProducts[j] === "Utbildning heldag" || SmartConnectSubProducts[j] === "Utbildning halvdag" || SmartConnectSubProducts[j] === "Vägledd leverans") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    /*const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());*/
                                    const OTF = OTFText.substring(0, OTFText.indexOf("- "));
                                    await this.ChangeOneTimeFeePicklist.selectOption(OTF);
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            if (SmartConnectSubProducts[j] === "Telia Svarsservice Administration, antal timmar per månad" || SmartConnectSubProducts[j] === "Befintlig 10-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Befintlig 100-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Befintlig 1000-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Ny 10-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Ny 100-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Ny 1000-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Utbildning heldag"
                                || SmartConnectSubProducts[j] === "Utbildning halvdag" || SmartConnectSubProducts[j] === "Baskonfiguration Smart Connect" || SmartConnectSubProducts[j] === "Tilläggskonfiguration, per ärende") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Implementering Kalenderintegration" || SmartConnectSubProducts[j] === "Implementering AD-integration"
                                || SmartConnectSubProducts[j] === "Implementering API Access" || SmartConnectSubProducts[j] === "Implementering Teamsintegration"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice 10" || SmartConnectSubProducts[j] === "Telia Svarsservice 20" || SmartConnectSubProducts[j] === "Telia Svarsservice 40"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice 60" || SmartConnectSubProducts[j] === "Telia Svarsservice 80" || SmartConnectSubProducts[j] === "Telia Svarsservice 100"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice Utökade Öppettider" || SmartConnectSubProducts[j] === "Vägledd leverans"
                                || SmartConnectSubProducts[j] === "Uppstartshjälp Smart Connect") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("1");
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Extra samtalsflöde (tillägg till Uppstartshjälp)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("5");
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Operator Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OperatorConnectSubProducts = (TestData.get("OperatorConnectSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Huvudabonnemang");
                        await this.toggleSubOffersInProduct(Product[i], "Uppstartskostnader");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            if (OperatorConnectSubProducts[j] !== "Mobil användare" && OperatorConnectSubProducts[j] !== "Servicenummer" && OperatorConnectSubProducts[j] !== "Uppstartskostnad" && OperatorConnectSubProducts[j] !== "Vägledd Pilot" && OperatorConnectSubProducts[j] !== "Teams konsultation, per timme") {
                                await this.AddToCartSubOffer(Product[i], OperatorConnectSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            if (OperatorConnectSubProducts[j] === "Mobil användare" || OperatorConnectSubProducts[j] === "Servicenummer") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    /*
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(1).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                    */
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            if (OperatorConnectSubProducts[j] === "Fast användare") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (OperatorConnectSubProducts[j] === "Uppstartskostnad" || OperatorConnectSubProducts[j] === "Vägledd Pilot" || OperatorConnectSubProducts[j] === "Teams konsultation, per timme" || OperatorConnectSubProducts[j] === "Enstaka fasta nummer" || OperatorConnectSubProducts[j] === "Nummerserie, 10 nummer (fast)" || OperatorConnectSubProducts[j] === "Nummerserie, 100 nummer (fast)" || OperatorConnectSubProducts[j] === "Nummerserie, 1000 nummer (fast)") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.page.waitForTimeout(2000);
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(2000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "TouchPoint Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchPointPlusSubProducts = (TestData.get("TouchPointPlusSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Användarpaket");
                        await this.toggleSubOffersInProduct(Product[i], "Gruppnummer/ACD");
                        await this.toggleSubOffersInProduct(Product[i], "Telefonist");
                        await this.toggleSubOffersInProduct(Product[i], "Statistik");
                        await this.toggleSubOffersInProduct(Product[i], "Inspelning");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationer & API:er");
                        await this.toggleSubOffersInProduct(Product[i], "Nummer");
                        await this.toggleSubOffersInProduct(Product[i], "Övriga tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Hårdvara");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildning");
                        await this.toggleSubOffersInProduct(Product[i], "Support");
                        await this.toggleSubOffersInProduct(Product[i], "Införande");
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] !== "Touchpoint Virtuell" && TouchPointPlusSubProducts[j] !== "Touchpoint Bas"
                                && TouchPointPlusSubProducts[j] !== "Touchpoint Mobil" && TouchPointPlusSubProducts[j] !== "Touchpoint Unified"
                                && TouchPointPlusSubProducts[j] !== "ACD Light-agent" && TouchPointPlusSubProducts[j] !== "Attendant"
                                && TouchPointPlusSubProducts[j] !== "Advanced Attendant" && TouchPointPlusSubProducts[j] !== "Advanced Attendant Installation"
                                && TouchPointPlusSubProducts[j] !== "Statistik Installation" && TouchPointPlusSubProducts[j] !== "Statistik Bas"
                                && TouchPointPlusSubProducts[j] !== "Statistik Utökad" && TouchPointPlusSubProducts[j] !== "Inspelning Installation"
                                && TouchPointPlusSubProducts[j] !== "Inspelning per användare" && TouchPointPlusSubProducts[j] !== "Inspelning lagring 3 år, tillägg per användare" &&
                                TouchPointPlusSubProducts[j] !== "Inspelning lagring 7 år, tillägg per användare" && TouchPointPlusSubProducts[j] !== "Svarsservice 10" && TouchPointPlusSubProducts[j] !== "Svarsservice 20" &&
                                TouchPointPlusSubProducts[j] !== "Svarsservice 40" && TouchPointPlusSubProducts[j] !== "Svarsservice 60" && TouchPointPlusSubProducts[j] !== "Svarsservice 80" &&
                                TouchPointPlusSubProducts[j] !== "Svarsservice 100" && TouchPointPlusSubProducts[j] !== "AD-integration" && TouchPointPlusSubProducts[j] !== "AD-integration Installation" &&
                                TouchPointPlusSubProducts[j] !== "Kalenderintegration per användare" && TouchPointPlusSubProducts[j] !== "Skype for Business Presence per användare" &&
                                TouchPointPlusSubProducts[j] !== "Skype for Business Presence & Voice per användare" && TouchPointPlusSubProducts[j] !== "Teamsintegration Presence per anv." &&
                                TouchPointPlusSubProducts[j] !== "Teamsintegration Presence & Voice per anv." && TouchPointPlusSubProducts[j] !== "Teamsintegration Installation" &&
                                TouchPointPlusSubProducts[j] !== "Telefonkonferens" && TouchPointPlusSubProducts[j] !== "Automatisk telefonist namnposter om 20 paket" &&
                                TouchPointPlusSubProducts[j] !== "Webkatalog Månadsavgift" && TouchPointPlusSubProducts[j] !== "Webkatalog AD-integrerad installation" &&
                                TouchPointPlusSubProducts[j] !== "Webkatalog Fristående utan IP-filter installation" && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående med IP-filter installation" &&
                                TouchPointPlusSubProducts[j] !== "Administratörsutbildning Webb 3 timmar" && TouchPointPlusSubProducts[j] !== "Slutanvändarsupport" &&
                                TouchPointPlusSubProducts[j] !== "Standardkonfiguration") {
                                await this.AddToCartSubOffer(Product[i], TouchPointPlusSubProducts[j]);
                            }
                        }
                        var totalQuantity = 0;
                        var InspelningPerAnvandare = 0;
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] === "Administratörsutbildning Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Standardkonfiguration") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            }
                            if (TouchPointPlusSubProducts[j] === "Touchpoint Virtuell"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Bas"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Mobil"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Unified") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                totalQuantity = TestData.get("ProductOfferQuantity") + totalQuantity;
                            }
                            if (TouchPointPlusSubProducts[j] === "Inspelning per användare") {
                                InspelningPerAnvandare = "6";
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type(InspelningPerAnvandare);
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        //console.log(totalQuantity);
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartValideraVarukorgenButton.click({ timeout: 5000 });
                        const TPPAttributes = (TestData.get("TPPAttributes")).split(";");
                        await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Administratörsutbildning Webb 3 timmar']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Standardkonfiguration']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        if (TPPAttributes[0] !== "Ingen") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Statistik " + TPPAttributes[0] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Statistik Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[2] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Slutanvändarsupport']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(totalQuantity.toString());
                        }
                        if (TPPAttributes[3] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='AD-integration']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(totalQuantity.toString());
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='AD-integration Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[4] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Svarsservice " + TPPAttributes[4] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[5] !== "Nej") {
                            const Webkatalog = TPPAttributes[5].split(", ");
                            //console.log(Webkatalog);
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Webkatalog " + Webkatalog[1] + " installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Webkatalog Månadsavgift']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue((Math.ceil(totalQuantity / 1000)).toString());
                        }
                        if (TPPAttributes[6] !== "Nej") {
                            if (TPPAttributes[6] !== "30 dagar") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning lagring " + TPPAttributes[6] + ", tillägg per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(InspelningPerAnvandare);
                            }
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] === "Sms 1000 (Advanced Attendant)"
                                || TouchPointPlusSubProducts[j] === "Wallboard, paket för 10 köer"
                                || TouchPointPlusSubProducts[j] === "Inspelning per användare"
                                || TouchPointPlusSubProducts[j] === "Inspelning lagring 3 år, tillägg per användare"
                                || TouchPointPlusSubProducts[j] === "Inspelning lagring 7 år, tillägg per användare"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 10"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 20"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 40"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 60"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 80"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 100"
                                || TouchPointPlusSubProducts[j] === "Svarsservice, Utökade öppettider"
                                || TouchPointPlusSubProducts[j] === "Svarsservice, Administration"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Presence per användare"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Presence & Voice per användare"
                                || TouchPointPlusSubProducts[j] === "Utökad Skype Access 10 kanaler"
                                || TouchPointPlusSubProducts[j] === "Utökad Teams Access 10 kanaler"
                                || TouchPointPlusSubProducts[j] === "UNummerserie, 10-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 100-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 1000-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Enstaka Nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Telefonkonferens"
                                || TouchPointPlusSubProducts[j] === "Automatisk telefonist namnposter om 20 paket"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Månadsavgift"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post per nummer, inklusive kryptering"
                                || TouchPointPlusSubProducts[j] === "AFAX via e-post, extra e-postadress"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 1-20 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 21-100 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 101-1000 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän över 1000 anställda"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Avisering SMS och e-post"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Express Check-in"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Utrymningslista"
                                || TouchPointPlusSubProducts[j] === "Slutanvändarsupport"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 10 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 15 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 20 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 25 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Standardkonfiguration"
                                || TouchPointPlusSubProducts[j] === "Advanced Attendant Installation"
                                || TouchPointPlusSubProducts[j] === "Advanced Attendant - Extra kundingång"
                                || TouchPointPlusSubProducts[j] === "Wallboard Installation"
                                || TouchPointPlusSubProducts[j] === "Inspelning Installation"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Integration per server"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Privat certifikat"
                                || TouchPointPlusSubProducts[j] === "Web API"
                                || TouchPointPlusSubProducts[j] === "Click-to-call Web API"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 10-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 100-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 1000-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Enstaka Nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Automatisk telefonist Installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog AD-integrerad installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Fristående utan IP-filter installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Fristående med IP-filter installation"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, eget domännamn engångsavg."
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Grundpaket"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Visit kiosk"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D717"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D735"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D785"
                                || TouchPointPlusSubProducts[j] === "Konferenstelefon Mitel"
                                || TouchPointPlusSubProducts[j] === "Strömadapter Mitel IP-telefon"
                                || TouchPointPlusSubProducts[j] === "Strömadapter Mitel konferenstelefon"
                                || TouchPointPlusSubProducts[j] === "Analogkonverter Mediatrix 2 portar"
                                || TouchPointPlusSubProducts[j] === "Administratörsutbildning Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Webb 2 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Webb inkl. telefonist 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Telefonistutbildning, Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Statistik bas 1 timme"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Statistik utökad 1,5 timme"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Adv Attendant, 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Administratörsutbildning Adv Attendant, 2 timmar"
                                || TouchPointPlusSubProducts[j] === "På plats utbildning, heldag"
                                || TouchPointPlusSubProducts[j] === "På plats utbildning, halvdag"
                                || TouchPointPlusSubProducts[j] === "Administratörssupport - Rörlig per påbörjad halvtimme"
                                || TouchPointPlusSubProducts[j] === "Projektledning"
                                || TouchPointPlusSubProducts[j] === "Införandestöd"
                                || TouchPointPlusSubProducts[j] === "Kundanpassad konfiguration per timme"
                                || TouchPointPlusSubProducts[j] === "Röstinspelning promptar paket upp till 5 promptar"
                                || TouchPointPlusSubProducts[j] === "Avgift per Dotterbolag") {
                                if (TouchPointPlusSubProducts[j] !== "Inspelning lagring 3 år, tillägg per användare"
                                    && TouchPointPlusSubProducts[j] !== "Inspelning lagring 7 år, tillägg per användare"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 10"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 20"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 40"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 60"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 80"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 100"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Månadsavgift"
                                    && TouchPointPlusSubProducts[j] !== "Slutanvändarsupport"
                                    && TouchPointPlusSubProducts[j] !== "Standardkonfiguration"
                                    && TouchPointPlusSubProducts[j] !== "Inspelning Installation"
                                    && TouchPointPlusSubProducts[j] !== "Administratörsutbildning Webb 3 timmar"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog AD-integrerad installation"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående utan IP-filter installation"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående med IP-filter installation") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            } else if (TouchPointPlusSubProducts[j] === "AD-integration Installation"
                                || TouchPointPlusSubProducts[j] === "Statistik Installation"
                                || TouchPointPlusSubProducts[j] === "Kalenderintegration per server/domän"
                                || TouchPointPlusSubProducts[j] === "Teamsintegration Installation") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + TouchPointPlusSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("- "));
                                    //console.log(OTF);
                                    await this.ChangeOneTimeFeePicklist.selectOption(OTF);
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (TouchPointPlusSubProducts[j] === "Kalenderintegration per server/domän"
                                    || TouchPointPlusSubProducts[j] === "Teamsintegration Installation") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TouchPointPlusSubProducts[j] !== "Statistik Bas"
                                    && TouchPointPlusSubProducts[j] !== "Statistik Utökad"
                                    && TouchPointPlusSubProducts[j] !== "AD-integration") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "IT-support Standard":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportStandardSubProducts = (TestData.get("ITSupportStandardSubProducts")).split(";");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITSupportStandardSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-support Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportPlusSubProducts = (TestData.get("ITSupportPlusSubProducts")).split(";");
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            if (ITSupportPlusSubProducts[j] === "Windows Server Support Online (per server)") {
                                await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                                await this.AddToCartSubOffer(Product[i], ITSupportPlusSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            if (ITSupportPlusSubProducts[j] !== "Windows Server Support Online (per server)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningSubProducts = (TestData.get("ITavdelningSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITavdelningSubProducts.length; j++) {
                            if (ITavdelningSubProducts[j] !== "Antivirus IT-avdelning" && ITavdelningSubProducts[j] !== "Google Cloud Backup IT-avdelning" && ITavdelningSubProducts[j] !== "M365 Cloud Backup IT-avdelning") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningStartSubProducts = (TestData.get("ITavdelningStartSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITavdelningStartSubProducts.length; j++) {
                            if (ITavdelningStartSubProducts[j] !== "Antivirus IT-avdelning" && ITavdelningStartSubProducts[j] !== "Google Cloud Backup IT-avdelning" && ITavdelningStartSubProducts[j] !== "M365 Cloud Backup IT-avdelning" && ITavdelningStartSubProducts[j] !== "Strategisk IT-rådgivning (inkl. IT-plan)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Säkerhet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartSakerhetSubProducts = (TestData.get("SmartSakerhetSubProducts")).split(";");
                        await this.AddToCartSubOffer(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            if (SmartSakerhetSubProducts[j] === "Uppstartshjälp Smart Säkerhet (4 enheter/licenser)" || SmartSakerhetSubProducts[j] === "1 tillkommande enhet (vid samma tillfälle)") {
                                await this.AddToCartSubOffer(Product[i], SmartSakerhetSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const GolvPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskadRabatt = parseInt(GolvPris);
                            if (SmartSakerhetSubProducts[j] !== "Uppstartshjälp Smart Säkerhet (4 enheter/licenser)" && SmartSakerhetSubProducts[j] !== "1 tillkommande enhet (vid samma tillfälle)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").type((OnskadRabatt - 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Försäkring Mobiltelefon":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ForsakringMobiltelefonSubProducts = (TestData.get("ForsakringMobiltelefonSubProducts")).split(";");
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], ForsakringMobiltelefonSubProducts[j]);
                        }
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MOBILT":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MICROSOFT 365":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MOBILT":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MICROSOFT 365":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "Övrigt":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OvrigtSubProducts = (TestData.get("OvrigtSubProducts")).split(";");
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            if (OvrigtSubProducts[j] !== "Övrigt - Produkt A") {
                                await this.AddToCartSubOffer(Product[i], OvrigtSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Bredband Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandStartSubProducts = (TestData.get("BredbandStartSubProducts")).split(";");
                        var BredbandStartOvrigaTjanster;
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartOvrigaTjanster !== "Yes"
                                && (BredbandStartSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandStartOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] !== "Engångsavgift för anslutningar 0 Mån" && BredbandStartSubProducts[j] !== "Engångsavgift för anslutningar 24 Mån" && BredbandStartSubProducts[j] !== "Lokal-ID sök" && BredbandStartSubProducts[j] !== "Uppstartshjälp Bredband") {
                                await this.AddToCartSubOffer(Product[i], BredbandStartSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        if (BredbandStartOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] === "Lokal-ID sök" || BredbandStartSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.AddToCartSubOffer(Product[i], BredbandStartSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] === "Lokal-ID sök" || BredbandStartSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandStartSubProducts[j] === "Engångsavgift för anslutningar 0 Mån" || BredbandStartSubProducts[j] === "Engångsavgift för anslutningar 24 Mån") {
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Bredband Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandPlusSubProducts = (TestData.get("BredbandPlusSubProducts")).split(";");
                        var BredbandPlusOvrigaTjanster;
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusOvrigaTjanster !== "Yes"
                                && (BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandPlusOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] === "Bredband Plus 10 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 100 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 300 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 1000 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandPlusSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandPlusOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] !== "Bredband Plus 10 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 100 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 300 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 1000 Mbit/s" && BredbandPlusSubProducts[j] !== "Engångsavgift för anslutningar 0 Mån" && BredbandPlusSubProducts[j] !== "Engångsavgift för anslutningar 24 Mån") {
                                await this.AddToCartSubOffer(Product[i], BredbandPlusSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] === "Bredband Plus QoS Real Time 1 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus QoS Real Time 3 Mbit/s" || BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband" || BredbandPlusSubProducts[j] === "Anslutning i fastighetsnät") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandPlusSubProducts[j] === "Engångsavgift för anslutningar 0 Mån" || BredbandPlusSubProducts[j] === "Engångsavgift för anslutningar 24 Mån") {
                            } else if (BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Termination"
                                || BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Backup"
                                || BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Combo Backup") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Bredband Pro":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandProSubProducts = (TestData.get("BredbandProSubProducts")).split(";");
                        var BredbandProOvrigaTjanster;
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProOvrigaTjanster !== "Yes"
                                && (BredbandProSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandProOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] === "Bredband Pro 100 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro 200 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 500 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro 1 Gbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 2 Gbit/s" || BredbandProSubProducts[j] === "Bredband Pro 5 Gbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 10 Gbit/s" || BredbandProSubProducts[j] === "Bredband Pro Wireless Basic"
                                || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 100 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 250 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandProSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandProOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 12 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 36 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 12 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 36 Mån" 
                                && BredbandProSubProducts[j] !== "Bredband Pro 100 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 200 Mbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 500 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 1 Gbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 2 Gbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 5 Gbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 10 Gbit/s" && BredbandProSubProducts[j] !== "Bredband Pro Wireless Basic"
                                && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 100 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 250 Mbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandProSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 12 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 36 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 12 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 36 Mån") {
                            } else if (BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 24 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 24 Mån"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 10 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 20 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 50 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 100 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 200 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro Quick Launch Termination"
                                || BredbandProSubProducts[j] === "Anslutning i fastighetsnät" 
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Basic") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24 Mån" && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                                if (BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 10 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 20 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 50 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 100 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 200 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro Quick Launch Termination") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Cloud VPN Wifi/Lan":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNWifiLanSubProducts = (TestData.get("CloudVPNWifiLanSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Wifi Accesspunkt");
                        await this.toggleSubOffersInProduct(Product[i], "LAN Switch");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            if (CloudVPNWifiLanSubProducts[j] !== "Engångsavgift hårdvara 12 Mån"
                                && CloudVPNWifiLanSubProducts[j] !== "Engångsavgift hårdvara 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNWifiLanSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            if (CloudVPNWifiLanSubProducts[j] === "Installation Övrigt per Timme"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wired Switch Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wireless Enhet") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (CloudVPNWifiLanSubProducts[j] === "Engångsavgift hårdvara 12 Mån"
                                || CloudVPNWifiLanSubProducts[j] === "Engångsavgift hårdvara 36 Mån") {
                            } else if (CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wireless Site"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wired Switch Site"
                                || CloudVPNWifiLanSubProducts[j] === "Design Wireless multiple SSID"
                                || CloudVPNWifiLanSubProducts[j] === "Installation Wireless per Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "Installation Wired Switch per Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "SFP fiber converter 1G, long range Single mode"
                                || CloudVPNWifiLanSubProducts[j] === "SFP fiber converter 1G, short range Multi mode"
                                || CloudVPNWifiLanSubProducts[j] === "SFP+ fiber converter 10G, long range"
                                || CloudVPNWifiLanSubProducts[j] === "Site survey Wifi") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Cloud VPN SD-Wan/Firewall":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNSDWanFirewallSubProducts = (TestData.get("CloudVPNSDWanFirewallSubProducts")).split(";");
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] === "Wired Large" || CloudVPNSDWanFirewallSubProducts[j] === "Wired Large Plus") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNSDWanFirewallSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Redundant Enhet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] !== "Wired"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Wired Large"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Wired Large Plus"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Engångsavgift hårdvara 12 Mån"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Engångsavgift hårdvara 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNSDWanFirewallSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] === "Proaktiv start av larmhantering Wired Enhet"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Installation Övrigt per Timme") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (CloudVPNSDWanFirewallSubProducts[j] === "Engångsavgift hårdvara 12 Mån"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Engångsavgift hårdvara 36 Mån") {
                            } else if (CloudVPNSDWanFirewallSubProducts[j] === "Proaktiv start av larmhantering Wired Site"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Installation Wired per Enhet") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Datanet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const DatanetSubProducts = (TestData.get("DatanetSubProducts")).split(";");
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] === "Access Multi 10 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 100 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 200 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 300 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 500 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 1 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 2 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 5 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 10 Gbit/s"
                                || DatanetSubProducts[j] === "Wireless Basic"
                                || DatanetSubProducts[j] === "Wireless Premium 100 Mbit/s"
                                || DatanetSubProducts[j] === "Wireless Premium 250 Mbit/s"
                                || DatanetSubProducts[j] === "Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], DatanetSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Service Center Connection (SCC)");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] !== "Access Multi 10 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 100 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 200 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 300 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 500 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 1 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 2 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 5 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 10 Gbit/s"
                                && DatanetSubProducts[j] !== "Wireless Basic"
                                && DatanetSubProducts[j] !== "Wireless Premium 100 Mbit/s"
                                && DatanetSubProducts[j] !== "Wireless Premium 250 Mbit/s"
                                && DatanetSubProducts[j] !== "Wireless Premium 500 Mbit/s"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 12Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 36Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 12 Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], DatanetSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] === "SCC ACE"
                                || DatanetSubProducts[j] === "SCC Cygate"
                                || DatanetSubProducts[j] === "SCC SIP Entry"
                                || DatanetSubProducts[j] === "SCC vPBX Telco Cloud"
                                || DatanetSubProducts[j] === "SCC TPP/MUCA"
                                || DatanetSubProducts[j] === "QoS Premium") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 12Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 24Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 36Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 12 Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 24 Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 36 Mån") {
                            } else if (DatanetSubProducts[j] === "SCC Cloud Connect 100 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 300 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 500 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 1 Gbit/s"
                                || DatanetSubProducts[j] === "SNMP read access"
                                || DatanetSubProducts[j] === "Internet Access on Customer Connection"
                                || DatanetSubProducts[j] === "QoS Real Time 1 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 10 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 20 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 50 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 100 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 200 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Basic"
                                || DatanetSubProducts[j] === "Stat Bas"
                                || DatanetSubProducts[j] === "Stat QoS"
                                || DatanetSubProducts[j] === "Stat CoS"
                                || DatanetSubProducts[j] === "Anslutning i fastighetsnät") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (DatanetSubProducts[j] === "SCC Cloud Connect 100 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 300 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 500 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 1 Gbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 1 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 10 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 20 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 50 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 100 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 200 Mbit/s") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
            }
        }
    }


    async ConfigureMCSalesProductForRenegotiationInTheCart(TestData) {
        var Product, klusters;
        Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            switch (Product[i]) {
                case "Mobilupplägg TOTAL":
                    {
                        const MobilupplaggTotalSubProducts = (TestData.get("MobilupplaggTotalSubProducts")).split(";");
                        klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus, BAS;
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggTotalSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                            }
                            if (BAS !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Jobbmobil BAS"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB")) {
                                BAS = "Yes";
                                klusters.push("Kluster BAS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        if (BAS === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Data Paket (BAS)");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilupplaggTotalSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggTotalSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggTotalSubProducts[j] === "Fakturadelning"
                                || MobilupplaggTotalSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggTotalSubProducts[j] === "Fast IP adress"
                                || MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggTotalSubProducts[j] === "Till Europa"
                                || MobilupplaggTotalSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Res Söderut"
                                || MobilupplaggTotalSubProducts[j] === "Res Österut"
                                || MobilupplaggTotalSubProducts[j] === "Res Västerut"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB"
                                || MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    //R24.05 - LTAART-321 - Negotiate minute based fees
                                    if (MobilupplaggTotalSubProducts[j] === "Norden"
                                    || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                    || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                    || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                    || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                        await this.cartFrame.locator("//div[@layout-name='mc-cpq-addon-specialpriceplan']//span[@ng-if='IPResponseReceived && isMinuteBasedAddon' and contains(normalize-space(.),'För mer information om priser till utlandet: [ https://www.telia.se/foretag/om/priser ]')]").first().hover();
                                    }
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.page.waitForTimeout(2000);
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggTotalSubProducts[j] === "Anslutning Klocka" || MobilupplaggTotalSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggTotalSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(2000);
                        }
                        if (TestData.get("AddMobilSpecialAddon") === "Yes") {
                            for (const kluster of klusters) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//button[normalize-space(.)='Toggle Abonnemangsunika tillvalstjänster' and contains(@class,'slds-button')]").click();
                            }
                            if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "AM", "Happy");
                                }
                            } else {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "SM", "Sad");
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Mobilupplägg All-IN+":
                    {
                        const MobilupplaggAllInPlusSubProducts = (TestData.get("MobilupplaggAllInPlusSubProducts")).split(";");
                        klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus;
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fakturadelning"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fast IP adress"
                                || MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggAllInPlusSubProducts[j] === "Till Europa"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Söderut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Österut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Västerut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    //R24.05 - LTAART-321 - Negotiate minute based fees
                                    if (MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                    || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                        await this.cartFrame.locator("//div[@layout-name='mc-cpq-addon-specialpriceplan']//span[@ng-if='IPResponseReceived && isMinuteBasedAddon' and contains(normalize-space(.),'För mer information om priser till utlandet: [ https://www.telia.se/foretag/om/priser ]')]").first().hover();
                                    }
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.page.waitForTimeout(2000);
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggAllInPlusSubProducts[j] === "Anslutning Klocka" || MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggAllInPlusSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(2000);
                        }
                        if (TestData.get("AddMobilSpecialAddon") === "Yes") {
                            for (const kluster of klusters) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//button[normalize-space(.)='Toggle Abonnemangsunika tillvalstjänster' and contains(@class,'slds-button')]").click();
                            }
                            if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "AM", "Happy");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "AM", "Happy");
                                }
                            } else {
                                for (const kluster of klusters) {
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Surf i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Samtal i utlandet", "SM", "Sad");
                                    await this.configureMobileSpecialAddon(Product[i], kluster, "Maxhastighet 1500Mbit/s", "SM", "Sad");
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Microsoft 365":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const Microsoft365SubProducts = (TestData.get("Microsoft365SubProducts")).split(";");
                        var Microsoft365OvrigaTjanster, TilvalOffice365;
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365OvrigaTjanster !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                    || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                    || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                    || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                    || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                    || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                    || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                    || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                    || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet")) {
                                Microsoft365OvrigaTjanster = "Yes";
                            }
                            if (TilvalOffice365 !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams EEA")) {
                                TilvalOffice365 = "Yes";
                            }
                        }
                        if (Microsoft365OvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Microsoft 365 - Övriga Tjänster");
                        }
                        if (TilvalOffice365 === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Tillval - Office 365");
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet") {
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[6]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const GolvPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[6]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskadRabatt = parseInt(GolvPris);
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").click();
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").type((OnskadRabatt).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").click();
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").type((OnskadRabatt + 1).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Touchpoint":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchpointSubProducts = (TestData.get("TouchpointSubProducts")).split(";");
                        var TouchpointOvrigaTjanster;
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointOvrigaTjanster !== "Yes"
                                && (TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                    || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)")) {
                                TouchpointOvrigaTjanster = "Yes";
                                await this.toggleSubOffersInProduct(Product[i], "Touchpoint - Övriga Tjänster");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Touchpoint, Grundpaketering växel");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint, Användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint Växel");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointSubProducts[j] === "Antal användare med tillvalet kalendersynk"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 10"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 20"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 40"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 60"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 80"
                                || TouchpointSubProducts[j] === "Telia Svarsservice 100"
                                || TouchpointSubProducts[j] === "Telia Svarsservice Utökade Öppettider"
                                || TouchpointSubProducts[j] === "Telia Svarsservice Administration, antal timmar per månad"
                                || TouchpointSubProducts[j] === "Office 365 Kalendersynk"
                                || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)") {
                            } else if (TouchpointSubProducts[j] === "Softphone"
                                || TouchpointSubProducts[j] === "Telefonistöd"
                                || TouchpointSubProducts[j] === "Menystyrning"
                                || TouchpointSubProducts[j] === "Extra svarsgrupp"
                                || TouchpointSubProducts[j] === "Fast nummer till svarsgrupp"
                                || TouchpointSubProducts[j] === "Fast nummer till menystyrning"
                                || TouchpointSubProducts[j] === "Ny 10-nummerserie för fasta nummer"
                                || TouchpointSubProducts[j] === "Office 365 Integration") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                    if (TouchpointSubProducts[j] !== "Office 365 Integration") {
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                        const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                        const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                        await this.page.keyboard.press('Control+A');
                                        await this.page.keyboard.press('Delete');
                                        await this.page.keyboard.press('Control+A');
                                        await this.page.keyboard.press('Delete');
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                                }
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartConnectSubProducts = (TestData.get("SmartConnectSubProducts")).split(";");
                        /*let KlustersNullOrEmpty = Boolean(klusters);
                        if (KlustersNullOrEmpty) {
                        } else {
                            const Products = (TestData.get("Products")).split(";");
                            for (let iteration = 0; iteration < Products.length; iteration++) {
                                if (Products[iteration] === "Mobilupplägg All-IN+") {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else if (Products[iteration] === "Mobilupplägg TOTAL") {
                                    klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                }
                            }
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        //Workaround for LTAART-426 and LTAART-427 Smart connect migration issue where we are adding smart connect product during renegotation
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            if (SmartConnectSubProducts[j] === "Smart Connect Standardanvändare") {
                                await this.AddToCartSubOffer(Product[i], SmartConnectSubProducts[j]);
                            }
                        }*/
                        var SCOvrigaTjanster;
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            if (SCOvrigaTjanster !== "Yes"
                                && (SmartConnectSubProducts[j] === "Baskonfiguration Smart Connect"
                                    || SmartConnectSubProducts[j] === "Tilläggskonfiguration, per ärende")) {
                                        SCOvrigaTjanster = "Yes";
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Tillval användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval företag");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildningar och leveranstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        if (SCOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Smart Connect - Övriga Tjänster");
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            /*
                            if (SmartConnectSubProducts[j] === "Smart Connect Standardanvändare") {
                                for (const kluster of klusters) {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("SmartConnectDiscountPercentage"))));
                                    //const OnskatPris = parseInt(MalPris) - 1;
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + kluster + "')]//ancestor::div[@class='slds-is-relative']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }*/
                            if (SmartConnectSubProducts[j] === "Smart Connect Standardanvändare" || SmartConnectSubProducts[j] === "Softphone (WebRTC)" || SmartConnectSubProducts[j] === "Extra telefonnummer" || SmartConnectSubProducts[j] === "Funktionsnummer"
                                || SmartConnectSubProducts[j] === "Kalenderintegration" || SmartConnectSubProducts[j] === "AD-integration" || SmartConnectSubProducts[j] === "API Access"
                                || SmartConnectSubProducts[j] === "Teamsintegration - Status") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                //const OnskatPris = parseInt(MalPris) - 1;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Implementering Kalenderintegration" || SmartConnectSubProducts[j] === "Implementering AD-integration"
                                || SmartConnectSubProducts[j] === "Implementering API Access" || SmartConnectSubProducts[j] === "Implementering Teamsintegration"
                                || SmartConnectSubProducts[j] === "Utbildning heldag" || SmartConnectSubProducts[j] === "Utbildning halvdag" || SmartConnectSubProducts[j] === "Vägledd leverans") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    /*const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());*/
                                    const OTF = OTFText.substring(0, OTFText.indexOf("- "));
                                    await this.ChangeOneTimeFeePicklist.selectOption(OTF);
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            if (SmartConnectSubProducts[j] === "Telia Svarsservice Administration, antal timmar per månad" || SmartConnectSubProducts[j] === "Befintlig 10-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Befintlig 100-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Befintlig 1000-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Ny 10-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Ny 100-nummerserie för fasta nummer"
                                || SmartConnectSubProducts[j] === "Ny 1000-nummerserie för fasta nummer" || SmartConnectSubProducts[j] === "Utbildning heldag"
                                || SmartConnectSubProducts[j] === "Utbildning halvdag" || SmartConnectSubProducts[j] === "Baskonfiguration Smart Connect" || SmartConnectSubProducts[j] === "Tilläggskonfiguration, per ärende") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Implementering Kalenderintegration" || SmartConnectSubProducts[j] === "Implementering AD-integration"
                                || SmartConnectSubProducts[j] === "Implementering API Access" || SmartConnectSubProducts[j] === "Implementering Teamsintegration"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice 10" || SmartConnectSubProducts[j] === "Telia Svarsservice 20" || SmartConnectSubProducts[j] === "Telia Svarsservice 40"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice 60" || SmartConnectSubProducts[j] === "Telia Svarsservice 80" || SmartConnectSubProducts[j] === "Telia Svarsservice 100"
                                || SmartConnectSubProducts[j] === "Telia Svarsservice Utökade Öppettider" || SmartConnectSubProducts[j] === "Vägledd leverans"
                                || SmartConnectSubProducts[j] === "Uppstartshjälp Smart Connect") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("1");
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (SmartConnectSubProducts[j] === "Extra samtalsflöde (tillägg till Uppstartshjälp)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("5");
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.page.waitForTimeout(2000);
                        }
                        break;
                    }
                case "Operator Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OperatorConnectSubProducts = (TestData.get("OperatorConnectSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Huvudabonnemang");
                        await this.toggleSubOffersInProduct(Product[i], "Uppstartskostnader");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            if (OperatorConnectSubProducts[j] === "Mobil användare" || OperatorConnectSubProducts[j] === "Servicenummer") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    /*
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(1).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                    */
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='SM']").first().click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            if (OperatorConnectSubProducts[j] === "Fast användare") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (OperatorConnectSubProducts[j] === "Uppstartskostnad" || OperatorConnectSubProducts[j] === "Vägledd Pilot" || OperatorConnectSubProducts[j] === "Teams konsultation, per timme" || OperatorConnectSubProducts[j] === "Enstaka fasta nummer" || OperatorConnectSubProducts[j] === "Nummerserie, 10 nummer (fast)" || OperatorConnectSubProducts[j] === "Nummerserie, 100 nummer (fast)" || OperatorConnectSubProducts[j] === "Nummerserie, 1000 nummer (fast)") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "TouchPoint Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchPointPlusSubProducts = (TestData.get("TouchPointPlusSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Användarpaket");
                        await this.toggleSubOffersInProduct(Product[i], "Gruppnummer/ACD");
                        await this.toggleSubOffersInProduct(Product[i], "Telefonist");
                        await this.toggleSubOffersInProduct(Product[i], "Statistik");
                        await this.toggleSubOffersInProduct(Product[i], "Inspelning");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationer & API:er");
                        await this.toggleSubOffersInProduct(Product[i], "Nummer");
                        await this.toggleSubOffersInProduct(Product[i], "Övriga tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Hårdvara");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildning");
                        await this.toggleSubOffersInProduct(Product[i], "Support");
                        await this.toggleSubOffersInProduct(Product[i], "Införande");
                        var totalQuantity = 0;
                        var InspelningPerAnvandare = 0;
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] === "Administratörsutbildning Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Standardkonfiguration") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            }
                            if (TouchPointPlusSubProducts[j] === "Touchpoint Virtuell"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Bas"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Mobil"
                                || TouchPointPlusSubProducts[j] === "Touchpoint Unified") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                totalQuantity = TestData.get("ProductOfferQuantity") + totalQuantity;
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            if (TouchPointPlusSubProducts[j] === "Inspelning per användare") {
                                InspelningPerAnvandare = "6";
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type(InspelningPerAnvandare);
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartValideraVarukorgenButton.click({ timeout: 5000 });
                        const TPPAttributes = (TestData.get("TPPAttributes")).split(";");
                        await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Administratörsutbildning Webb 3 timmar']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Standardkonfiguration']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        if (TPPAttributes[0] !== "Ingen") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Statistik " + TPPAttributes[0] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Statistik Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[2] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Slutanvändarsupport']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(totalQuantity.toString());
                        }
                        if (TPPAttributes[3] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='AD-integration']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(totalQuantity.toString());
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='AD-integration Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[4] !== "Nej") {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Svarsservice " + TPPAttributes[4] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        if (TPPAttributes[5] !== "Nej") {
                            const Webkatalog = TPPAttributes[5].split(", ");
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Webkatalog " + Webkatalog[1] + " installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Webkatalog Månadsavgift']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue((Math.ceil(totalQuantity / 1000)).toString());
                        }
                        if (TPPAttributes[6] !== "Nej") {
                            if (TPPAttributes[6] !== "30 dagar") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning lagring " + TPPAttributes[6] + ", tillägg per användare']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue(InspelningPerAnvandare);
                            }
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='Inspelning Installation']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']")).toHaveValue("1");
                        }
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] === "Sms 1000 (Advanced Attendant)"
                                || TouchPointPlusSubProducts[j] === "Wallboard, paket för 10 köer"
                                || TouchPointPlusSubProducts[j] === "Inspelning per användare"
                                || TouchPointPlusSubProducts[j] === "Inspelning lagring 3 år, tillägg per användare"
                                || TouchPointPlusSubProducts[j] === "Inspelning lagring 7 år, tillägg per användare"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 10"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 20"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 40"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 60"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 80"
                                || TouchPointPlusSubProducts[j] === "Svarsservice 100"
                                || TouchPointPlusSubProducts[j] === "Svarsservice, Utökade öppettider"
                                || TouchPointPlusSubProducts[j] === "Svarsservice, Administration"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Presence per användare"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Presence & Voice per användare"
                                || TouchPointPlusSubProducts[j] === "Utökad Skype Access 10 kanaler"
                                || TouchPointPlusSubProducts[j] === "Utökad Teams Access 10 kanaler"
                                || TouchPointPlusSubProducts[j] === "UNummerserie, 10-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 100-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 1000-nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Enstaka Nummer (Fast)"
                                || TouchPointPlusSubProducts[j] === "Telefonkonferens"
                                || TouchPointPlusSubProducts[j] === "Automatisk telefonist namnposter om 20 paket"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Månadsavgift"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post per nummer, inklusive kryptering"
                                || TouchPointPlusSubProducts[j] === "AFAX via e-post, extra e-postadress"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 1-20 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 21-100 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän 101-1000 anställda"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, domän över 1000 anställda"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Avisering SMS och e-post"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Express Check-in"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Utrymningslista"
                                || TouchPointPlusSubProducts[j] === "Slutanvändarsupport"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 10 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 15 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 20 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Aktiv förvaltning paket 25 tim/månad"
                                || TouchPointPlusSubProducts[j] === "Standardkonfiguration"
                                || TouchPointPlusSubProducts[j] === "Advanced Attendant Installation"
                                || TouchPointPlusSubProducts[j] === "Advanced Attendant - Extra kundingång"
                                || TouchPointPlusSubProducts[j] === "Wallboard Installation"
                                || TouchPointPlusSubProducts[j] === "Inspelning Installation"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Integration per server"
                                || TouchPointPlusSubProducts[j] === "Skype for Business Privat certifikat"
                                || TouchPointPlusSubProducts[j] === "Web API"
                                || TouchPointPlusSubProducts[j] === "Click-to-call Web API"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 10-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 100-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Nummerserie, 1000-nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Enstaka Nummer, utökning (Fast)"
                                || TouchPointPlusSubProducts[j] === "Automatisk telefonist Installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog AD-integrerad installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Fristående utan IP-filter installation"
                                || TouchPointPlusSubProducts[j] === "Webkatalog Fristående med IP-filter installation"
                                || TouchPointPlusSubProducts[j] === "FAX via e-post, eget domännamn engångsavg."
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Grundpaket"
                                || TouchPointPlusSubProducts[j] === "Besökssystem, Visit kiosk"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D717"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D735"
                                || TouchPointPlusSubProducts[j] === "IP-telefon SNOM D785"
                                || TouchPointPlusSubProducts[j] === "Konferenstelefon Mitel"
                                || TouchPointPlusSubProducts[j] === "Strömadapter Mitel IP-telefon"
                                || TouchPointPlusSubProducts[j] === "Strömadapter Mitel konferenstelefon"
                                || TouchPointPlusSubProducts[j] === "Analogkonverter Mediatrix 2 portar"
                                || TouchPointPlusSubProducts[j] === "Administratörsutbildning Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Webb 2 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Webb inkl. telefonist 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Telefonistutbildning, Webb 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Statistik bas 1 timme"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Statistik utökad 1,5 timme"
                                || TouchPointPlusSubProducts[j] === "Användarutbildning Adv Attendant, 3 timmar"
                                || TouchPointPlusSubProducts[j] === "Administratörsutbildning Adv Attendant, 2 timmar"
                                || TouchPointPlusSubProducts[j] === "På plats utbildning, heldag"
                                || TouchPointPlusSubProducts[j] === "På plats utbildning, halvdag"
                                || TouchPointPlusSubProducts[j] === "Administratörssupport - Rörlig per påbörjad halvtimme"
                                || TouchPointPlusSubProducts[j] === "Projektledning"
                                || TouchPointPlusSubProducts[j] === "Införandestöd"
                                || TouchPointPlusSubProducts[j] === "Kundanpassad konfiguration per timme"
                                || TouchPointPlusSubProducts[j] === "Röstinspelning promptar paket upp till 5 promptar"
                                || TouchPointPlusSubProducts[j] === "Avgift per Dotterbolag") {
                                if (TouchPointPlusSubProducts[j] !== "Inspelning lagring 3 år, tillägg per användare"
                                    && TouchPointPlusSubProducts[j] !== "Inspelning lagring 7 år, tillägg per användare"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 10"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 20"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 40"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 60"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 80"
                                    && TouchPointPlusSubProducts[j] !== "Svarsservice 100"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Månadsavgift"
                                    && TouchPointPlusSubProducts[j] !== "Slutanvändarsupport"
                                    && TouchPointPlusSubProducts[j] !== "Standardkonfiguration"
                                    && TouchPointPlusSubProducts[j] !== "Inspelning Installation"
                                    && TouchPointPlusSubProducts[j] !== "Administratörsutbildning Webb 3 timmar"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog AD-integrerad installation"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående utan IP-filter installation"
                                    && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående med IP-filter installation") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            } else if (TouchPointPlusSubProducts[j] === "AD-integration Installation"
                                || TouchPointPlusSubProducts[j] === "Statistik Installation"
                                || TouchPointPlusSubProducts[j] === "Kalenderintegration per server/domän"
                                || TouchPointPlusSubProducts[j] === "Teamsintegration Installation") {
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//span[text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + TouchPointPlusSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("- "));
                                    await this.ChangeOneTimeFeePicklist.selectOption(OTF);
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (TouchPointPlusSubProducts[j] === "Kalenderintegration per server/domän"
                                    || TouchPointPlusSubProducts[j] === "Teamsintegration Installation") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TouchPointPlusSubProducts[j] !== "Statistik Bas"
                                    && TouchPointPlusSubProducts[j] !== "Statistik Utökad"
                                    && TouchPointPlusSubProducts[j] !== "AD-integration") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            await this.page.waitForTimeout(2000);
                        }
                        break;
                    }
                case "IT-support Standard":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportStandardSubProducts = (TestData.get("ITSupportStandardSubProducts")).split(";");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITSupportStandardSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-support Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportPlusSubProducts = (TestData.get("ITSupportPlusSubProducts")).split(";");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            if (ITSupportPlusSubProducts[j] !== "Windows Server Support Online (per server)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningSubProducts = (TestData.get("ITavdelningSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITavdelningSubProducts.length; j++) {
                            if (ITavdelningSubProducts[j] !== "Antivirus IT-avdelning" && ITavdelningSubProducts[j] !== "Google Cloud Backup IT-avdelning" && ITavdelningSubProducts[j] !== "M365 Cloud Backup IT-avdelning") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningStartSubProducts = (TestData.get("ITavdelningStartSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < ITavdelningStartSubProducts.length; j++) {
                            if (ITavdelningStartSubProducts[j] !== "Antivirus IT-avdelning" && ITavdelningStartSubProducts[j] !== "Google Cloud Backup IT-avdelning" && ITavdelningStartSubProducts[j] !== "M365 Cloud Backup IT-avdelning" && ITavdelningStartSubProducts[j] !== "Strategisk IT-rådgivning (inkl. IT-plan)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ITSupportDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Säkerhet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartSakerhetSubProducts = (TestData.get("SmartSakerhetSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const GolvPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskadRabatt = parseInt(GolvPris);
                            if (SmartSakerhetSubProducts[j] !== "Uppstartshjälp Smart Säkerhet (4 enheter/licenser)" && SmartSakerhetSubProducts[j] !== "1 tillkommande enhet (vid samma tillfälle)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested')]//input").type((OnskadRabatt - 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Försäkring Mobiltelefon":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ForsakringMobiltelefonSubProducts = (TestData.get("ForsakringMobiltelefonSubProducts")).split(";");
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MOBILT":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").clear();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MICROSOFT 365":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").clear();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MOBILT":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").clear();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MICROSOFT 365":
                    {
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").click();
                        const GolvPris = await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[6]//div[contains(@ng-if,'vlocity_cmt__OneTimeCharge__c')]").textContent();
                        const OnskadRabatt = parseInt(GolvPris);
                        if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        } else {
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").type((OnskadRabatt + 1).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//descendant::div[contains(@ng-if,'OneTimeCharge')]//child::span[contains(@ng-class,'discount')]").click();
                            await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div//button[@title='Change Price' or @title='' or @title='TBD']").click();
                            const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                            const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                            await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                            await this.ApplyOneTimeFeeButton.click();
                            await this.cartFrame.locator("//div[@class='cpq-item-base-product']//div[@class='cpq-item-no-children' and text()='" + Product[i] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                        }
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").clear();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "Övrigt":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OvrigtSubProducts = (TestData.get("OvrigtSubProducts")).split(";");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.page.keyboard.press('Control+A');
                            await this.page.keyboard.press('Delete');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Bredband Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandStartSubProducts = (TestData.get("BredbandStartSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        var BredbandStartOvrigaTjanster;
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartOvrigaTjanster !== "Yes"
                                && (BredbandStartSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandStartOvrigaTjanster = "Yes";
                                await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] === "Lokal-ID sök" || BredbandStartSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandStartSubProducts[j] === "Engångsavgift för anslutningar 0 Mån" || BredbandStartSubProducts[j] === "Engångsavgift för anslutningar 24 Mån") {
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Bredband Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandPlusSubProducts = (TestData.get("BredbandPlusSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        //await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        var BredbandPlusOvrigaTjanster;
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusOvrigaTjanster !== "Yes"
                                && (BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandPlusOvrigaTjanster = "Yes";
                                await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] === "Bredband Plus QoS Real Time 1 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus QoS Real Time 3 Mbit/s" || BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband" || BredbandPlusSubProducts[j] === "Anslutning i fastighetsnät") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandPlusSubProducts[j] === "Engångsavgift för anslutningar 0 Mån" || BredbandPlusSubProducts[j] === "Engångsavgift för anslutningar 24 Mån") {
                            } else if (BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Termination"
                                || BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Backup"
                                || BredbandPlusSubProducts[j] === "Bredband Plus Quick Launch Combo Backup") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Bredband Pro":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandProSubProducts = (TestData.get("BredbandProSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        //await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        var BredbandProOvrigaTjanster;
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProOvrigaTjanster !== "Yes"
                                && (BredbandProSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandProOvrigaTjanster = "Yes";
                                await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 12 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 36 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 12 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 36 Mån") {
                            } else if (BredbandProSubProducts[j] === "Engångsavgift för Fiber anslutningar 24 Mån"
                                || BredbandProSubProducts[j] === "Engångsavgift för Mobila anslutningar 24 Mån"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Basic"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 10 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 20 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 50 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 100 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 200 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro Quick Launch Termination"
                                || BredbandProSubProducts[j] === "Anslutning i fastighetsnät" 
                                || BredbandProSubProducts[j] === "Bredband Pro QoS Basic") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24 Mån" && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                                if (BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 10 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 20 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 50 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 100 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro QoS Real Time 200 Mbit/s"
                                    || BredbandProSubProducts[j] === "Bredband Pro Quick Launch Termination") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Cloud VPN Wifi/Lan":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNWifiLanSubProducts = (TestData.get("CloudVPNWifiLanSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Wifi Accesspunkt");
                        await this.toggleSubOffersInProduct(Product[i], "LAN Switch");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            if (CloudVPNWifiLanSubProducts[j] === "Installation Övrigt per Timme"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wired Switch Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wireless Enhet") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (CloudVPNWifiLanSubProducts[j] === "Engångsavgift hårdvara 12 Mån"
                                || CloudVPNWifiLanSubProducts[j] === "Engångsavgift hårdvara 36 Mån") {
                            } else if (CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wireless Site"
                                || CloudVPNWifiLanSubProducts[j] === "Proaktiv start av larmhantering Wired Switch Site"
                                || CloudVPNWifiLanSubProducts[j] === "Design Wireless multiple SSID"
                                || CloudVPNWifiLanSubProducts[j] === "Installation Wireless per Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "Installation Wired Switch per Enhet"
                                || CloudVPNWifiLanSubProducts[j] === "SFP fiber converter 1G, long range Single mode"
                                || CloudVPNWifiLanSubProducts[j] === "SFP fiber converter 1G, short range Multi mode"
                                || CloudVPNWifiLanSubProducts[j] === "SFP+ fiber converter 10G, long range"
                                || CloudVPNWifiLanSubProducts[j] === "Site survey Wifi") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Cloud VPN SD-Wan/Firewall":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNSDWanFirewallSubProducts = (TestData.get("CloudVPNSDWanFirewallSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Redundant Enhet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] === "Proaktiv start av larmhantering Wired Enhet"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Installation Övrigt per Timme") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (CloudVPNSDWanFirewallSubProducts[j] === "Engångsavgift hårdvara 12 Mån"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Engångsavgift hårdvara 36 Mån") {
                            } else if (CloudVPNSDWanFirewallSubProducts[j] === "Proaktiv start av larmhantering Wired Site"
                                || CloudVPNSDWanFirewallSubProducts[j] === "Installation Wired per Enhet") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Datanet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const DatanetSubProducts = (TestData.get("DatanetSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Service Center Connection (SCC)");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        //await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] === "SCC ACE"
                                || DatanetSubProducts[j] === "SCC Cygate"
                                || DatanetSubProducts[j] === "SCC SIP Entry"
                                || DatanetSubProducts[j] === "SCC vPBX Telco Cloud"
                                || DatanetSubProducts[j] === "SCC TPP/MUCA"
                                || DatanetSubProducts[j] === "QoS Premium") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 12Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 24Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Fiber anslutningar 36Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 12 Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 24 Mån"
                                || DatanetSubProducts[j] === "Engångsavgift för Mobila anslutningar 36 Mån") {
                            } else if (DatanetSubProducts[j] === "SCC Cloud Connect 100 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 300 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 500 Mbit/s"
                                || DatanetSubProducts[j] === "SCC Cloud Connect 1 Gbit/s"
                                || DatanetSubProducts[j] === "SNMP read access"
                                || DatanetSubProducts[j] === "Internet Access on Customer Connection"
                                || DatanetSubProducts[j] === "QoS Real Time 1 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 10 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 20 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 50 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 100 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Real Time 200 Mbit/s"
                                || DatanetSubProducts[j] === "QoS Basic"
                                || DatanetSubProducts[j] === "Stat Bas"
                                || DatanetSubProducts[j] === "Stat QoS"
                                || DatanetSubProducts[j] === "Stat CoS"
                                || DatanetSubProducts[j] === "Anslutning i fastighetsnät") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                }
                                else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//span[contains(@ng-class,'cpq-item-discount-price')]").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'OneTimeCharge')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                    const OTFText = await this.cartFrame.locator("//div[@id='showmsgOverride']/ul/li[contains(text(),'SM') or contains(text(),'SD') or contains(text(),'CM')][1]").textContent();
                                    const OTF = OTFText.substring(0, OTFText.indexOf("kr"));
                                    await this.ChangeOneTimeFeeTextbox.type((OTF).toString());
                                    await this.ApplyOneTimeFeeButton.click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//img[contains(@src,'Sad')]").click();
                                }
                                if (DatanetSubProducts[j] === "SCC Cloud Connect 100 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 300 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 500 Mbit/s"
                                    || DatanetSubProducts[j] === "SCC Cloud Connect 1 Gbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 1 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 10 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 20 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 50 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 100 Mbit/s"
                                    || DatanetSubProducts[j] === "QoS Real Time 200 Mbit/s") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                    const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                    const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.page.keyboard.press('Control+A');
                                    await this.page.keyboard.press('Delete');
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                    await this.page.waitForTimeout(1000);
                                    await this.page.keyboard.press('Tab');
                                }
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("ConnectedOfficeDiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.page.keyboard.press('Control+A');
                                await this.page.keyboard.press('Delete');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
        }
    }


    async ConfigureMCSalesProductForNegotiationInTheCart(TestData) {
        var Product, klusters;
        Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            switch (Product[i]) {
                case "Mobilupplägg TOTAL":
                    {
                        const MobilupplaggTotalSubProducts = (TestData.get("MobilupplaggTotalSubProducts")).split(";");
                        klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus, BAS;
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Mobil - Övriga Tjänster");
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggTotalSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                                await this.AddToCartSubOffer(Product[i], "Kluster PLUS");
                            }
                            if (BAS !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Jobbmobil BAS"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB")) {
                                BAS = "Yes";
                                klusters.push("Kluster BAS");
                                await this.AddToCartSubOffer(Product[i], "Kluster BAS");
                                await this.AddToCartSubOffer(Product[i], "Data Paket (BAS)");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        if (BAS === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Data Paket (BAS)");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilupplaggTotalSubProducts[j] !== "Jobbmobil BAS"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 5 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 20 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil 50 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Obegränsad"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Obegränsad Plus"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbmobil Datasim"
                                && MobilupplaggTotalSubProducts[j] !== "Anslutning Klocka"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 20 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 50 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 500 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Mobilt Bredband Företag 1000 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Till Europa"
                                && MobilupplaggTotalSubProducts[j] !== "Till Grannland Företag"
                                && MobilupplaggTotalSubProducts[j] !== "Till Utland Företag"
                                && MobilupplaggTotalSubProducts[j] !== "Res Söderut"
                                && MobilupplaggTotalSubProducts[j] !== "Res Österut"
                                && MobilupplaggTotalSubProducts[j] !== "Res Västerut"
                                && MobilupplaggTotalSubProducts[j] !== "Fast IP adress"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf Bas"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 1GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 3 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 5 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 15 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 25 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 40 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Jobbsurf 120 GB"
                                && MobilupplaggTotalSubProducts[j] !== "Norden"
                                && MobilupplaggTotalSubProducts[j] !== "Europa 1/Världen 1"
                                && MobilupplaggTotalSubProducts[j] !== "Europa 2/Världen 2"
                                && MobilupplaggTotalSubProducts[j] !== "Världen 3"
                                && MobilupplaggTotalSubProducts[j] !== "Världen 4"
                                ) {
                                await this.AddToCartSubOffer(Product[i], MobilupplaggTotalSubProducts[j]);
                            }
                        }
                        const MobilupplaggTotalExistingProducts = (TestData.get("ExistingProducts")).split(";");
                        for (let j = 0; j < MobilupplaggTotalExistingProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//a[contains(@ng-click,'config')]").click();
                            await this.configureSparaSavingButton.click();
                            await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggTotalSubProducts[j] + "')]").click();
                            await this.configureCloseButton.click();
                        }
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilupplaggTotalSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggTotalSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggTotalSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggTotalSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggTotalSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggTotalSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggTotalSubProducts[j] === "Fakturadelning"
                                || MobilupplaggTotalSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggTotalSubProducts[j] === "Fast IP adress"
                                || MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggTotalSubProducts[j] === "Till Europa"
                                || MobilupplaggTotalSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggTotalSubProducts[j] === "Res Söderut"
                                || MobilupplaggTotalSubProducts[j] === "Res Österut"
                                || MobilupplaggTotalSubProducts[j] === "Res Västerut"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB"
                                || MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggTotalSubProducts[j] === "Norden"
                                || MobilupplaggTotalSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggTotalSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggTotalSubProducts[j] === "Världen 3"
                                || MobilupplaggTotalSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.page.waitForTimeout(2000);
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggTotalSubProducts[j] === "Anslutning Klocka" || MobilupplaggTotalSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggTotalSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggTotalSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Mobilupplägg All-IN+":
                    {
                        const MobilupplaggAllInPlusSubProducts = (TestData.get("MobilupplaggAllInPlusSubProducts")).split(";");
                        klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus;
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Mobil - Övriga Tjänster");
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                                await this.AddToCartSubOffer(Product[i], "Kluster PLUS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil 50 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Obegränsad"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Obegränsad Plus"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Jobbmobil Datasim"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Anslutning Klocka"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 20 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 50 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 500 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Mobilt Bredband Företag 1000 GB"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Europa"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Grannland Företag"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Till Utland Företag"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Söderut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Österut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Res Västerut"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Fast IP adress"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Norden"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Europa 1/Världen 1"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Europa 2/Världen 2"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Världen 3"
                                && MobilupplaggAllInPlusSubProducts[j] !== "Världen 4") {
                                await this.AddToCartSubOffer(Product[i], MobilupplaggAllInPlusSubProducts[j]);
                            }
                        }
                        const MobilPlusExistingProducts = (TestData.get("ExistingProducts")).split(";");
                        for (let j = 0; j < MobilPlusExistingProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilPlusExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilPlusExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilPlusExistingProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//a[contains(@ng-click,'config')]").click();
                            await this.configureSparaSavingButton.click();
                            await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggAllInPlusSubProducts[j] + "')]").click();
                            await this.configureCloseButton.click();
                        }
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Telia mobil"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till Fasta nät"
                                || MobilupplaggAllInPlusSubProducts[j] === "Taltrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtal till Mobilsvar"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska Telia mobilabonnemang"
                                || MobilupplaggAllInPlusSubProducts[j] === "Internsamtal till egna svenska fasta nummer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till Telias svenska mobilabonnemang samt fasta telenät i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Data-/faxtrafik till andra mobiloperatörer i Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "Videosamtal inom Sverige"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "SMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till Telia och övriga svenska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "MMS till utländska operatörer"
                                || MobilupplaggAllInPlusSubProducts[j] === "Detaljspecifikation"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fakturadelning"
                                || MobilupplaggAllInPlusSubProducts[j] === "Samtalsgruppering"
                                || MobilupplaggAllInPlusSubProducts[j] === "Fast IP adress"
                                || MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            } else if (MobilupplaggAllInPlusSubProducts[j] === "Till Europa"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Grannland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Till Utland Företag"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Söderut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Österut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Res Västerut"
                                || MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                if (TestData.get("WithinUserMandate") === "WithinSalesRepMandate") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                    await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='AM']").nth(0).click();
                                    await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
                                    await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//img[contains(@src,'Happy')]").click();
                                } else {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']").click();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
                                }
                                //R24.05 - LTAART-321 - Negotiate minute based fees
                                if (MobilupplaggAllInPlusSubProducts[j] === "Norden"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 1/Världen 1"
                                || MobilupplaggAllInPlusSubProducts[j] === "Europa 2/Världen 2"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 3"
                                || MobilupplaggAllInPlusSubProducts[j] === "Världen 4") {
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                                    await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                                } else {
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                        await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                        await this.page.waitForTimeout(1000);
                                        await this.page.keyboard.press('Tab');
                                    }
                            }
                            else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate" && (MobilupplaggAllInPlusSubProducts[j] === "Anslutning Klocka" || MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Datasim")) {
                                    await this.cartFrame.locator("//span[text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//a[contains(@ng-click,'config')]").click();
                                    await this.cartFrame.locator("//button[normalize-space(.)='Display Lookup Values' and not(contains(@class,'hide'))]").click();
                                    await this.cartFrame.locator("//td[contains(text(),'3 fria månader')]//preceding-sibling::td//input[@type='radio']").click();
                                    await this.cartFrame.locator("//button[@type='button' and contains(@ng-click,'saveCampagin') and contains(text(),'Ok')]").first().click();
                                    await this.configureSparaSavingButton.click();
                                    await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + MobilupplaggAllInPlusSubProducts[j] + "')]").click();
                                    await this.configureCloseButton.click();
                                }
                            }
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Microsoft 365":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const Microsoft365SubProducts = (TestData.get("Microsoft365SubProducts")).split(";");
                        var Microsoft365OvrigaTjanster, TilvalOffice365;
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365OvrigaTjanster !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet")) {
                                Microsoft365OvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Microsoft 365 - Övriga Tjänster");
                            }
                            if (TilvalOffice365 !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams EEA")) {
                                TilvalOffice365 = "Yes";
                            }
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] !== "Microsoft migrering e-post, max 1 domän och 3 konton"
                            && Microsoft365SubProducts[j] !== "Microsoft migrering e-post, max 1 domän och 20 konton"
                            && Microsoft365SubProducts[j] !== "Tillkommande migreringsavgift per mailkonto"
                            && Microsoft365SubProducts[j] !== "Grundkonfiguration MS365, max 1 domän och 20 konton"
                            && Microsoft365SubProducts[j] !== "Installation Office, per enhet"
                            && Microsoft365SubProducts[j] !== "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                            && Microsoft365SubProducts[j] !== "Säkerhetsanalys MS365"
                            && Microsoft365SubProducts[j] !== "Uppstartshjälp Teams, 1-10 användare"
                            && Microsoft365SubProducts[j] !== "Installation av Teams på ytterligare en enhet"
                                && Microsoft365SubProducts[j] !== "Microsoft 365 Audio Conferencing"
                                && Microsoft365SubProducts[j] !== "Microsoft Entra ID P1"
                                && Microsoft365SubProducts[j] !== "Microsoft Entra ID P2"
                                && Microsoft365SubProducts[j] !== "Enterprise Mobility + Security E3"
                                && Microsoft365SubProducts[j] !== "Enterprise Mobility + Security E5"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Phone Standard"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Shared Devices"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams Rooms Pro"
                                && Microsoft365SubProducts[j] !== "Microsoft Teams EEA") {
                                await this.AddToCartSubOffer(Product[i], Microsoft365SubProducts[j]);
                            }
                        }
                        if (Microsoft365OvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Microsoft 365 - Övriga Tjänster");
                        }
                        if (TilvalOffice365 === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Tillval - Office 365");
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet"
                                || Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                || Microsoft365SubProducts[j] === "Microsoft Teams EEA") {
                                await this.AddToCartSubOffer(Product[i], Microsoft365SubProducts[j]);
                            }
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Percentage')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.keyboard.press('Tab');
                            await this.page.waitForTimeout(1000);
                        }
                        break;
                    }
                case "Touchpoint":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchpointSubProducts = (TestData.get("TouchpointSubProducts")).split(";");
                        var TouchpointOvrigaTjanster;
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointOvrigaTjanster !== "Yes"
                                && (TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                    || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)")) {
                                TouchpointOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Touchpoint - Övriga Tjänster");
                                await this.toggleSubOffersInProduct(Product[i], "Touchpoint - Övriga Tjänster");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Touchpoint, Grundpaketering växel");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint, Användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint Växel");
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointSubProducts[j] !== "Touchpoint, Användare med mobilt nummer"
                                && TouchpointSubProducts[j] !== "Startkostnad"
                                && TouchpointSubProducts[j] !== "Svarsgrupp med köfunktion") {
                                await this.AddToCartSubOffer(Product[i], TouchpointSubProducts[j]);
                            }
                        }
                        let NoQuantityForTP = Boolean(TestData.get("NoQuantityForTP"));
                        if (NoQuantityForTP) {
                        } else {
                            TestData.set("NoQuantityForTP", "");
                        }
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            if (NoQuantityForTP) {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type("0");
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartConnectSubProducts = (TestData.get("SmartConnectSubProducts")).split(";");
                        /*let KlustersNullOrEmpty = Boolean(klusters);
                        if (KlustersNullOrEmpty) {
                        } else {
                            const Products = (TestData.get("Products")).split(";");
                            for (let iteration = 0; iteration < Products.length; iteration++) {
                                if (Products[iteration] === "Mobilupplägg All-IN+") {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else if (Products[iteration] === "Mobilupplägg TOTAL") {
                                    klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                }
                            }
                        }
                        for (const kluster of klusters) {
                            await this.AddToCartSubOffer(Product[i], kluster);
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }*/
                        await this.toggleSubOffersInProduct(Product[i], "Tillval användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval företag");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildningar och leveranstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            if (SmartConnectSubProducts[j] !== "Smart Connect Standardanvändare" && SmartConnectSubProducts[j] !== "Uppstartshjälp Smart Connect") {
                                await this.AddToCartSubOffer(Product[i], SmartConnectSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Operator Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OperatorConnectSubProducts = (TestData.get("OperatorConnectSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Huvudabonnemang");
                        await this.toggleSubOffersInProduct(Product[i], "Uppstartskostnader");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            if (OperatorConnectSubProducts[j] !== "Mobil användare" && OperatorConnectSubProducts[j] !== "Servicenummer" && OperatorConnectSubProducts[j] !== "Uppstartskostnad" && OperatorConnectSubProducts[j] !== "Vägledd Pilot" && OperatorConnectSubProducts[j] !== "Teams konsultation, per timme") {
                                await this.AddToCartSubOffer(Product[i], OperatorConnectSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "TouchPoint Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchPointPlusSubProducts = (TestData.get("TouchPointPlusSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Användarpaket");
                        await this.toggleSubOffersInProduct(Product[i], "Gruppnummer/ACD");
                        await this.toggleSubOffersInProduct(Product[i], "Telefonist");
                        await this.toggleSubOffersInProduct(Product[i], "Statistik");
                        await this.toggleSubOffersInProduct(Product[i], "Inspelning");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationer & API:er");
                        await this.toggleSubOffersInProduct(Product[i], "Nummer");
                        await this.toggleSubOffersInProduct(Product[i], "Övriga tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Hårdvara");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildning");
                        await this.toggleSubOffersInProduct(Product[i], "Support");
                        await this.toggleSubOffersInProduct(Product[i], "Införande");
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            if (TouchPointPlusSubProducts[j] !== "Touchpoint Virtuell" && TouchPointPlusSubProducts[j] !== "Touchpoint Bas"
                                && TouchPointPlusSubProducts[j] !== "Touchpoint Mobil" && TouchPointPlusSubProducts[j] !== "Touchpoint Unified"
                                && TouchPointPlusSubProducts[j] !== "ACD Light-agent" && TouchPointPlusSubProducts[j] !== "Attendant"
                                && TouchPointPlusSubProducts[j] !== "Advanced Attendant" && TouchPointPlusSubProducts[j] !== "Advanced Attendant Installation"
                                && TouchPointPlusSubProducts[j] !== "Statistik Installation" && TouchPointPlusSubProducts[j] !== "Statistik Bas"
                                && TouchPointPlusSubProducts[j] !== "Statistik Utökad" && TouchPointPlusSubProducts[j] !== "Inspelning Installation"
                                && TouchPointPlusSubProducts[j] !== "Inspelning per användare" && TouchPointPlusSubProducts[j] !== "Inspelning lagring 3 år, tillägg per användare" &&
                                TouchPointPlusSubProducts[j] !== "Inspelning lagring 7 år, tillägg per användare" && TouchPointPlusSubProducts[j] !== "Svarsservice 10" && TouchPointPlusSubProducts[j] !== "Svarsservice 20" &&
                                TouchPointPlusSubProducts[j] !== "Svarsservice 40" && TouchPointPlusSubProducts[j] !== "Svarsservice 60" && TouchPointPlusSubProducts[j] !== "Svarsservice 80" &&
                                TouchPointPlusSubProducts[j] !== "Svarsservice 100" && TouchPointPlusSubProducts[j] !== "AD-integration" && TouchPointPlusSubProducts[j] !== "AD-integration Installation" &&
                                TouchPointPlusSubProducts[j] !== "Kalenderintegration per användare" && TouchPointPlusSubProducts[j] !== "Skype for Business Presence per användare" &&
                                TouchPointPlusSubProducts[j] !== "Skype for Business Presence & Voice per användare" && TouchPointPlusSubProducts[j] !== "Teamsintegration Presence per anv." &&
                                TouchPointPlusSubProducts[j] !== "Teamsintegration Presence & Voice per anv." && TouchPointPlusSubProducts[j] !== "Teamsintegration Installation" &&
                                TouchPointPlusSubProducts[j] !== "Telefonkonferens" && TouchPointPlusSubProducts[j] !== "Automatisk telefonist namnposter om 20 paket" &&
                                TouchPointPlusSubProducts[j] !== "Webkatalog Månadsavgift" && TouchPointPlusSubProducts[j] !== "Webkatalog AD-integrerad installation" &&
                                TouchPointPlusSubProducts[j] !== "Webkatalog Fristående utan IP-filter installation" && TouchPointPlusSubProducts[j] !== "Webkatalog Fristående med IP-filter installation" &&
                                TouchPointPlusSubProducts[j] !== "Administratörsutbildning Webb 3 timmar" && TouchPointPlusSubProducts[j] !== "Slutanvändarsupport" &&
                                TouchPointPlusSubProducts[j] !== "Standardkonfiguration") {
                                await this.AddToCartSubOffer(Product[i], TouchPointPlusSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-support Standard":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportStandardSubProducts = (TestData.get("ITSupportStandardSubProducts")).split(";");
                        for (let j = 0; j < ITSupportStandardSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-support Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportPlusSubProducts = (TestData.get("ITSupportPlusSubProducts")).split(";");
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            if (ITSupportPlusSubProducts[j] === "Windows Server Support Online (per server)") {
                                await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                                await this.AddToCartSubOffer(Product[i], ITSupportPlusSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningSubProducts = (TestData.get("ITavdelningSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        for (let j = 0; j < ITavdelningSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "IT-avdelning Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningStartSubProducts = (TestData.get("ITavdelningStartSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        for (let j = 0; j < ITavdelningStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Smart Säkerhet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartSakerhetSubProducts = (TestData.get("SmartSakerhetSubProducts")).split(";");
                        await this.AddToCartSubOffer(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            if (SmartSakerhetSubProducts[j] === "Uppstartshjälp Smart Säkerhet (4 enheter/licenser)" || SmartSakerhetSubProducts[j] === "1 tillkommande enhet (vid samma tillfälle)") {
                                await this.AddToCartSubOffer(Product[i], SmartSakerhetSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Försäkring Mobiltelefon":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ForsakringMobiltelefonSubProducts = (TestData.get("ForsakringMobiltelefonSubProducts")).split(";");
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], ForsakringMobiltelefonSubProducts[j]);
                        }
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MOBILT":
                    {

                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MICROSOFT 365":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MOBILT":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MICROSOFT 365":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").click();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input").type((TestData.get("ProductOfferQuantity")).toString());
                        await this.page.waitForTimeout(1000);
                        await this.page.keyboard.press('Tab');
                        break;
                    }
                case "Övrigt":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OvrigtSubProducts = (TestData.get("OvrigtSubProducts")).split(";");
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            if (OvrigtSubProducts[j] !== "Övrigt - Produkt A") {
                                await this.AddToCartSubOffer(Product[i], OvrigtSubProducts[j]);
                            }
                        }
                        await this.PerformProductConfiguration(TestData, Product[i]);
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Bredband Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandStartSubProducts = (TestData.get("BredbandStartSubProducts")).split(";");
                        var BredbandStartOvrigaTjanster;
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartOvrigaTjanster !== "Yes"
                                && (BredbandStartSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandStartOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] !== "Engångsavgift för anslutningar 0 Mån" && BredbandStartSubProducts[j] !== "Engångsavgift för anslutningar 24 Mån" && BredbandStartSubProducts[j] !== "Lokal-ID sök" && BredbandStartSubProducts[j] !== "Uppstartshjälp Bredband") {
                                await this.AddToCartSubOffer(Product[i], BredbandStartSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        if (BredbandStartOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartSubProducts[j] === "Lokal-ID sök" || BredbandStartSubProducts[j] === "Uppstartshjälp Bredband") {
                                await this.AddToCartSubOffer(Product[i], BredbandStartSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Bredband Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandPlusSubProducts = (TestData.get("BredbandPlusSubProducts")).split(";");
                        var BredbandPlusOvrigaTjanster;
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusOvrigaTjanster !== "Yes"
                                && (BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandPlusOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] === "Bredband Plus 10 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 100 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 300 Mbit/s" || BredbandPlusSubProducts[j] === "Bredband Plus 1000 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandPlusSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandPlusOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusSubProducts[j] !== "Bredband Plus 10 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 100 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 300 Mbit/s" && BredbandPlusSubProducts[j] !== "Bredband Plus 1000 Mbit/s" && BredbandPlusSubProducts[j] !== "Engångsavgift för anslutningar 0 Mån" && BredbandPlusSubProducts[j] !== "Engångsavgift för anslutningar 24 Mån") {
                                await this.AddToCartSubOffer(Product[i], BredbandPlusSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Bredband Pro":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandProSubProducts = (TestData.get("BredbandProSubProducts")).split(";");
                        var BredbandProOvrigaTjanster;
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProOvrigaTjanster !== "Yes"
                                && (BredbandProSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandProOvrigaTjanster = "Yes";
                                await this.AddToCartSubOffer(Product[i], "Bredband - Övriga Tjänster");
                            }
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] === "Bredband Pro 100 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro 200 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 500 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro 1 Gbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 2 Gbit/s" || BredbandProSubProducts[j] === "Bredband Pro 5 Gbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro 10 Gbit/s" || BredbandProSubProducts[j] === "Bredband Pro Wireless Basic"
                                || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 100 Mbit/s" || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 250 Mbit/s"
                                || BredbandProSubProducts[j] === "Bredband Pro Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandProSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandProOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 12 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Fiber anslutningar 36 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 12 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån"
                                && BredbandProSubProducts[j] !== "Engångsavgift för Mobila anslutningar 36 Mån" 
                                && BredbandProSubProducts[j] !== "Bredband Pro 100 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 200 Mbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 500 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 1 Gbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 2 Gbit/s" && BredbandProSubProducts[j] !== "Bredband Pro 5 Gbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro 10 Gbit/s" && BredbandProSubProducts[j] !== "Bredband Pro Wireless Basic"
                                && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 100 Mbit/s" && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 250 Mbit/s"
                                && BredbandProSubProducts[j] !== "Bredband Pro Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], BredbandProSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Cloud VPN Wifi/Lan":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNWifiLanSubProducts = (TestData.get("CloudVPNWifiLanSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Wifi Accesspunkt");
                        await this.toggleSubOffersInProduct(Product[i], "LAN Switch");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            if (CloudVPNWifiLanSubProducts[j] !== "Engångsavgift hårdvara 12 Mån"
                                && CloudVPNWifiLanSubProducts[j] !== "Engångsavgift hårdvara 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNWifiLanSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Cloud VPN SD-Wan/Firewall":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNSDWanFirewallSubProducts = (TestData.get("CloudVPNSDWanFirewallSubProducts")).split(";");
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] === "Wired Large" || CloudVPNSDWanFirewallSubProducts[j] === "Wired Large Plus") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNSDWanFirewallSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Redundant Enhet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            if (CloudVPNSDWanFirewallSubProducts[j] !== "Wired"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Wired Large"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Wired Large Plus"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Engångsavgift hårdvara 12 Mån"
                                && CloudVPNSDWanFirewallSubProducts[j] !== "Engångsavgift hårdvara 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], CloudVPNSDWanFirewallSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Datanet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const DatanetSubProducts = (TestData.get("DatanetSubProducts")).split(";");
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] === "Access Multi 10 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 100 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 200 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 300 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 500 Mbit/s"
                                || DatanetSubProducts[j] === "Access Multi 1 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 2 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 5 Gbit/s"
                                || DatanetSubProducts[j] === "Access Multi 10 Gbit/s"
                                || DatanetSubProducts[j] === "Wireless Basic"
                                || DatanetSubProducts[j] === "Wireless Premium 100 Mbit/s"
                                || DatanetSubProducts[j] === "Wireless Premium 250 Mbit/s"
                                || DatanetSubProducts[j] === "Wireless Premium 500 Mbit/s") {
                                await this.AddToCartSubOffer(Product[i], DatanetSubProducts[j]);
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Service Center Connection (SCC)");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            if (DatanetSubProducts[j] !== "Access Multi 10 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 100 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 200 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 300 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 500 Mbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 1 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 2 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 5 Gbit/s"
                                && DatanetSubProducts[j] !== "Access Multi 10 Gbit/s"
                                && DatanetSubProducts[j] !== "Wireless Basic"
                                && DatanetSubProducts[j] !== "Wireless Premium 100 Mbit/s"
                                && DatanetSubProducts[j] !== "Wireless Premium 250 Mbit/s"
                                && DatanetSubProducts[j] !== "Wireless Premium 500 Mbit/s"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 12Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 24Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Fiber anslutningar 36Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 12 Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 24 Mån"
                                && DatanetSubProducts[j] !== "Engångsavgift för Mobila anslutningar 36 Mån") {
                                await this.AddToCartSubOffer(Product[i], DatanetSubProducts[j]);
                            }
                        }
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
            }
        }
    }


    async ConfigureMCSalesProductForTillaggsforhandlingInTheCart(TestData) {
        var Product, klusters;
        Product = (TestData.get("ExistingProducts")).split(";");
        for (let i = 0; i < Product.length; i++) {
            switch (Product[i]) {
                case "Mobilupplägg TOTAL":
                    {
                        const MobilupplaggTotalSubProducts = (TestData.get("MobilupplaggTotalSubProducts")).split(";");
                        klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus, BAS;
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggTotalSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggTotalSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                            }
                            if (BAS !== "Yes"
                                && (MobilupplaggTotalSubProducts[j] === "Jobbmobil BAS"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf Bas"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 1GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 3 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 5 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 15 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 25 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 40 GB"
                                    || MobilupplaggTotalSubProducts[j] === "Jobbsurf 120 GB")) {
                                BAS = "Yes";
                                klusters.push("Kluster BAS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        if (BAS === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Data Paket (BAS)");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggTotalSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggTotalSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Mobilupplägg All-IN+":
                    {
                        const MobilupplaggAllInPlusSubProducts = (TestData.get("MobilupplaggAllInPlusSubProducts")).split(";");
                        klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        var MobilOvrigaTjanster, KlusterPlus;
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            if (MobilOvrigaTjanster !== "Yes"
                                && (MobilupplaggAllInPlusSubProducts[j] === "Uppstartshjälp Mobil (1-3 användare)"
                                    || MobilupplaggAllInPlusSubProducts[j] === "1 tillkommande användare (vid samma besök)")) {
                                MobilOvrigaTjanster = "Yes";
                            }
                            if (KlusterPlus !== "Yes"
                                && MobilupplaggAllInPlusSubProducts[j] === "Jobbmobil Obegränsad Plus") {
                                KlusterPlus = "Yes";
                                klusters.push("Kluster PLUS");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Trafikavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Samtal från Sverige till Utlandet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Mobilt BB");
                        if (MobilOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Mobil - Övriga Tjänster");
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }
                        for (let j = 0; j < MobilupplaggAllInPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + MobilupplaggAllInPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Microsoft 365":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const Microsoft365SubProducts = (TestData.get("Microsoft365SubProducts")).split(";");
                        var Microsoft365OvrigaTjanster, TilvalOffice365;
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            if (Microsoft365OvrigaTjanster !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 3 konton"
                                || Microsoft365SubProducts[j] === "Microsoft migrering e-post, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Tillkommande migreringsavgift per mailkonto"
                                || Microsoft365SubProducts[j] === "Grundkonfiguration MS365, max 1 domän och 20 konton"
                                || Microsoft365SubProducts[j] === "Installation Office, per enhet"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Acronis Cloud Backup, per domän/tenant"
                                || Microsoft365SubProducts[j] === "Säkerhetsanalys MS365"
                                || Microsoft365SubProducts[j] === "Uppstartshjälp Teams, 1-10 användare"
                                || Microsoft365SubProducts[j] === "Installation av Teams på ytterligare en enhet")) {
                                Microsoft365OvrigaTjanster = "Yes";
                            }
                            if (TilvalOffice365 !== "Yes"
                                && (Microsoft365SubProducts[j] === "Microsoft 365 Audio Conferencing"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P1"
                                    || Microsoft365SubProducts[j] === "Microsoft Entra ID P2"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E3"
                                    || Microsoft365SubProducts[j] === "Enterprise Mobility + Security E5"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Phone Standard"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Shared Devices"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams Rooms Pro"
                                    || Microsoft365SubProducts[j] === "Microsoft Teams EEA")) {
                                TilvalOffice365 = "Yes";
                            }
                        }
                        if (Microsoft365OvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Microsoft 365 - Övriga Tjänster");
                        }
                        if (TilvalOffice365 === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Tillval - Office 365");
                        }
                        for (let j = 0; j < Microsoft365SubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Percentage')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + Microsoft365SubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Touchpoint":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchpointSubProducts = (TestData.get("TouchpointSubProducts")).split(";");
                        var TouchpointOvrigaTjanster;
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            if (TouchpointOvrigaTjanster !== "Yes"
                                && (TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, 1-3 användare"
                                    || TouchpointSubProducts[j] === "Uppstartshjälp Touchpoint, tillkommande 1-3 användare (vid samma tillfälle)")) {
                                TouchpointOvrigaTjanster = "Yes";
                                await this.toggleSubOffersInProduct(Product[i], "Touchpoint - Övriga Tjänster");
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Touchpoint, Grundpaketering växel");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint, Användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval - Touchpoint Växel");
                        for (let j = 0; j < TouchpointSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchpointSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Smart Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartConnectSubProducts = (TestData.get("SmartConnectSubProducts")).split(";");
                        /*let KlustersNullOrEmpty = Boolean(klusters);
                        if (KlustersNullOrEmpty) {
                        } else {
                            const Products = (TestData.get("Products")).split(";");
                            for (let iteration = 0; iteration < Products.length; iteration++) {
                                if (Products[iteration] === "Mobilupplägg All-IN+") {
                                    klusters = ["Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else if (Products[iteration] === "Mobilupplägg TOTAL") {
                                    klusters = ["Kluster SMALL", "Kluster MEDIUM", "Kluster LARGE", "Kluster XTRA-LARGE"];
                                } else {
                                    klusters = ["Övriga mobilavtal"];
                                }
                            }
                        }
                        for (const kluster of klusters) {
                            await this.toggleSubOffersInProduct(Product[i], kluster);
                        }*/
                        await this.toggleSubOffersInProduct(Product[i], "Tillval användare");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval företag");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildningar och leveranstjänster");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        for (let j = 0; j < SmartConnectSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Operator Connect":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OperatorConnectSubProducts = (TestData.get("OperatorConnectSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Huvudabonnemang");
                        await this.toggleSubOffersInProduct(Product[i], "Uppstartskostnader");
                        await this.toggleSubOffersInProduct(Product[i], "Nummerserier");
                        for (let j = 0; j < OperatorConnectSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OperatorConnectSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "TouchPoint Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const TouchPointPlusSubProducts = (TestData.get("TouchPointPlusSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Användarpaket");
                        await this.toggleSubOffersInProduct(Product[i], "Gruppnummer/ACD");
                        await this.toggleSubOffersInProduct(Product[i], "Telefonist");
                        await this.toggleSubOffersInProduct(Product[i], "Statistik");
                        await this.toggleSubOffersInProduct(Product[i], "Inspelning");
                        await this.toggleSubOffersInProduct(Product[i], "Svarsservice");
                        await this.toggleSubOffersInProduct(Product[i], "Integrationer & API:er");
                        await this.toggleSubOffersInProduct(Product[i], "Nummer");
                        await this.toggleSubOffersInProduct(Product[i], "Övriga tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Hårdvara");
                        await this.toggleSubOffersInProduct(Product[i], "Utbildning");
                        await this.toggleSubOffersInProduct(Product[i], "Support");
                        await this.toggleSubOffersInProduct(Product[i], "Införande");
                        for (let j = 0; j < TouchPointPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + TouchPointPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "IT-support Standard":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportStandardSubProducts = (TestData.get("ITSupportStandardSubProducts")).split(";");
                        for (let j = 0; j < ITSupportStandardSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportStandardSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "IT-support Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITSupportPlusSubProducts = (TestData.get("ITSupportPlusSubProducts")).split(";");
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            if (ITSupportPlusSubProducts[j] === "Windows Server Support Online (per server)") {
                                await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                            }
                        }
                        for (let j = 0; j < ITSupportPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITSupportPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "IT-avdelning":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningSubProducts = (TestData.get("ITavdelningSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        for (let j = 0; j < ITavdelningSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "IT-avdelning Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ITavdelningStartSubProducts = (TestData.get("ITavdelningStartSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på användarnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tjänster på företagsnivå");
                        await this.toggleSubOffersInProduct(Product[i], "Tilläggstjänster");
                        for (let j = 0; j < ITavdelningStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ITavdelningStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Smart Säkerhet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const SmartSakerhetSubProducts = (TestData.get("SmartSakerhetSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Smart Säkerhet - Övriga Tjänster");
                        for (let j = 0; j < SmartSakerhetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SmartSakerhetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Försäkring Mobiltelefon":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const ForsakringMobiltelefonSubProducts = (TestData.get("ForsakringMobiltelefonSubProducts")).split(";");
                        for (let j = 0; j < ForsakringMobiltelefonSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + ForsakringMobiltelefonSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MOBILT":
                    {

                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input[@disabled='disabled']").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input[@disabled='disabled']").hover();
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 1:A LINJE MICROSOFT 365":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input[@disabled='disabled']").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input[@disabled='disabled']").hover();
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MOBILT":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input[@disabled='disabled']").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input[@disabled='disabled']").hover();
                        break;
                    }
                case "SLUTANVÄNDARSUPPORT – 2:A LINJE MICROSOFT 365":
                    {
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'TeliaSE_MC_Customer_Requested_Percentage__c')]/div/input[@disabled='disabled']").hover();
                        await this.cartFrame.locator("//div[text()='" + Product[i] + "']//parent::div//parent::div//parent::div//parent::div//div[contains(@ng-if,'FACallOffQuantity')]/div/input[@disabled='disabled']").hover();
                        break;
                    }
                case "Övrigt":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const OvrigtSubProducts = (TestData.get("OvrigtSubProducts")).split(";");
                        for (let j = 0; j < OvrigtSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + OvrigtSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Bredband Start":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandStartSubProducts = (TestData.get("BredbandStartSubProducts")).split(";");
                        var BredbandStartOvrigaTjanster;
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            if (BredbandStartOvrigaTjanster !== "Yes"
                                && (BredbandStartSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandStartOvrigaTjanster = "Yes";
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        if (BredbandStartOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Bredband Plus":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandPlusSubProducts = (TestData.get("BredbandPlusSubProducts")).split(";");
                        var BredbandPlusOvrigaTjanster;
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            if (BredbandPlusOvrigaTjanster !== "Yes"
                                && (BredbandPlusSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandPlusOvrigaTjanster = "Yes";
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandPlusOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandPlusSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandPlusSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Bredband Pro":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const BredbandProSubProducts = (TestData.get("BredbandProSubProducts")).split(";");
                        var BredbandProOvrigaTjanster;
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            if (BredbandProOvrigaTjanster !== "Yes"
                                && (BredbandProSubProducts[j] === "Uppstartshjälp Bredband")) {
                                BredbandProOvrigaTjanster = "Yes";
                            }
                        }
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        if (BredbandProOvrigaTjanster === "Yes") {
                            await this.toggleSubOffersInProduct(Product[i], "Bredband - Övriga Tjänster");
                        }
                        for (let j = 0; j < BredbandProSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + BredbandProSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Cloud VPN Wifi/Lan":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNWifiLanSubProducts = (TestData.get("CloudVPNWifiLanSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Wifi Accesspunkt");
                        await this.toggleSubOffersInProduct(Product[i], "LAN Switch");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNWifiLanSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNWifiLanSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Cloud VPN SD-Wan/Firewall":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const CloudVPNSDWanFirewallSubProducts = (TestData.get("CloudVPNSDWanFirewallSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Redundant Enhet");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        for (let j = 0; j < CloudVPNSDWanFirewallSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + CloudVPNSDWanFirewallSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "Datanet":
                    {
                        await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
                        const DatanetSubProducts = (TestData.get("DatanetSubProducts")).split(";");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter FIBER");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Basic");
                        await this.toggleSubOffersInProduct(Product[i], "Engångsavgifter Wireless Premium");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Wireless Backup");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Sekundär Access");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Utökad SLA");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Service Center Connection (SCC)");
                        await this.toggleSubOffersInProduct(Product[i], "Installation och Övriga Tillval");
                        await this.toggleSubOffersInProduct(Product[i], "Tillval Säkerhet");
                        for (let j = 0; j < DatanetSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Customer_Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + DatanetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'FACallOffQuantity')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
            }
        }
    }


    async ConfigureCRMFiberProductInTheCart(TestData) {
        if (TestData.get("QuoteRecordType") === "Offert - Standard" && TestData.get("SalesFlowType") === "NewSales") {
            await this.ConfigureCRMFiberProductInTheIACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Standard" && TestData.get("SalesFlowType") === "Renegotiation") {
            await this.ConfigureCRMFiberProductInTheRenegotiatedIACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Skapa ett nytt Ramavtal" && TestData.get("SalesFlowType") === "NewSales") {
            await this.ConfigureCRMFiberProductInTheFACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Skapa ett nytt Ramavtal" && TestData.get("SalesFlowType") === "Renegotiation") {
            await this.ConfigureCRMFiberProductInTheRenegotiatedFACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Avrop Ramavtal - Avtalat pris" && TestData.get("SalesFlowType") === "NewSales") {
            await this.ConfigureCRMFiberProductInTheCAWithFACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Avrop Ramavtal - Avtalat pris" && TestData.get("SalesFlowType") === "Renegotiation") {
            await this.ConfigureCRMFiberProductInTheRenegotiatedCAWithFACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Avrop Ramavtal - Eget pris" && TestData.get("SalesFlowType") === "NewSales") {
            await this.ConfigureCRMFiberProductInTheIACart(TestData);
        } else if (TestData.get("QuoteRecordType") === "Offert - Avrop Ramavtal - Eget pris" && TestData.get("SalesFlowType") === "Renegotiation") {
            await this.ConfigureCRMFiberProductInTheRenegotiatedIACart(TestData);
        }
    }



    async ConfigureCRMFiberProductInTheIACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TvSubProducts[j]);
                        }
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            if (TvSubProducts[j] !== "Tv - Allmänna utrymmen - Start" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Bas" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Lagom" && TvSubProducts[j] !== "Tv - Must Carry" && TvSubProducts[j] !== "Extra Tv-box") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            /*if (FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetFSSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }*/
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                || FastighetSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                || FastighetSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HardvaraSubProducts[j]);
                        }
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetServiceSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            if (FastighetServiceSubProducts[j] !== "Service mot faktura för Kabel-TV" && FastighetServiceSubProducts[j] !== "Service mot faktura"
                                && FastighetServiceSubProducts[j] !== "Serviceavtal - Ej installerad bostad/lokal" && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Individuell installation"
                                && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Kollektiv installation") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue("400");
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], BBTeleSubProducts[j]);
                        }
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            if (BBTeleSubProducts[j] === "Bredband - 100 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 250 Mbit/s"
                                || BBTeleSubProducts[j] === "Bredband - 500 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 1000 Mbit/s"
                                || BBTeleSubProducts[j] === "Telefoni" || BBTeleSubProducts[j] === "Installationshjälp"
                                || BBTeleSubProducts[j] === "Trådlös Router F1x") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], ZitiusFastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            /*if (ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s" || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s"
                                || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s" || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s"
                                || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }*/
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TeliaB2BBBSubProducts[j]);
                        }
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HalebopBBSubProducts[j]);
                        }
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (FLITOppenFiberSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue("400");
                            }
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (FLITXLANSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
        }
    }



    async ConfigureCRMFiberProductInTheRenegotiatedIACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        var NewProductList = null;
        if (Boolean(TestData.get("NewProductsToAddDuringRenegotiation"))) {
            NewProductList = TestData.get("NewProductsToAddDuringRenegotiation");
        } else {
            NewProductList = "";
        }
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (TvSubProducts[j] !== "Tv - Allmänna utrymmen - Start" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Bas" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Lagom" && TvSubProducts[j] !== "Tv - Must Carry" && TvSubProducts[j] !== "Extra Tv-box") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            /*if (FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                || FastighetFSSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetFSSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }*/
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FastighetServiceSubProducts[j] !== "Service mot faktura för Kabel-TV" && FastighetServiceSubProducts[j] !== "Service mot faktura"
                                    && FastighetServiceSubProducts[j] !== "Serviceavtal - Ej installerad bostad/lokal" && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Individuell installation"
                                    && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Kollektiv installation") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Fastighet - ServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (BBTeleSubProducts[j] === "Bredband - 100 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 250 Mbit/s"
                                    || BBTeleSubProducts[j] === "Bredband - 500 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 1000 Mbit/s"
                                    || BBTeleSubProducts[j] === "Telefoni" || BBTeleSubProducts[j] === "Installationshjälp"
                                    || BBTeleSubProducts[j] === "Trådlös Router F1x") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s" || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s"
                                    || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s" || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s"
                                    || ZitiusFastighetFSSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FLITOppenFiberSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();

                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FLITXLANSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }



    async ConfigureCRMFiberProductInTheFACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TvSubProducts[j]);
                        }
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HardvaraSubProducts[j]);
                        }
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetServiceSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], BBTeleSubProducts[j]);
                        }
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], ZitiusFastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TeliaB2BBBSubProducts[j]);
                        }
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HalebopBBSubProducts[j]);
                        }
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }



    async ConfigureCRMFiberProductInTheRenegotiatedFACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[3]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                const OnskatPris = Math.round(MalPris - (MalPris * (TestData.get("DiscountPercentage"))));
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input").type((OnskatPris).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }



    async ConfigureCRMFiberProductInTheCAWithFACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TvSubProducts[j]);
                        }
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            if (TvSubProducts[j] !== "Tv - Allmänna utrymmen - Start" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Bas" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Lagom" && TvSubProducts[j] !== "Tv - Must Carry" && TvSubProducts[j] !== "Extra Tv-box") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                || FastighetSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                || FastighetSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HardvaraSubProducts[j]);
                        }
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FastighetServiceSubProducts[j]);
                        }
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            if (FastighetServiceSubProducts[j] !== "Service mot faktura för Kabel-TV" && FastighetServiceSubProducts[j] !== "Service mot faktura"
                                && FastighetServiceSubProducts[j] !== "Serviceavtal - Ej installerad bostad/lokal" && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Individuell installation"
                                && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Kollektiv installation") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue("400");
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], BBTeleSubProducts[j]);
                        }
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            if (BBTeleSubProducts[j] === "Bredband - 100 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 250 Mbit/s"
                                || BBTeleSubProducts[j] === "Bredband - 500 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 1000 Mbit/s"
                                || BBTeleSubProducts[j] === "Telefoni" || BBTeleSubProducts[j] === "Installationshjälp"
                                || BBTeleSubProducts[j] === "Trådlös Router F1x") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], ZitiusFastighetFSSubProducts[j]);
                        }
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], TeliaB2BBBSubProducts[j]);
                        }
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], HalebopBBSubProducts[j]);
                        }
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FiberVillaSDUXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITOppenFiberSubProducts[j]);
                        }
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (FLITOppenFiberSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue("400");
                            }
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            await this.AddToCartSubOffer(Product[i], FLITXLANSubProducts[j]);
                        }
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (FLITXLANSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            }
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity")).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }



    async ConfigureCRMFiberProductInTheRenegotiatedCAWithFACart(TestData) {
        const Product = (TestData.get("Products")).split(";");
        var NewProductList = null;
        if (Boolean(TestData.get("NewProductsToAddDuringRenegotiation"))) {
            NewProductList = TestData.get("NewProductsToAddDuringRenegotiation");
        } else {
            NewProductList = "";
        }
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (TvSubProducts[j] !== "Tv - Allmänna utrymmen - Start" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Bas" && TvSubProducts[j] !== "Tv - Allmänna utrymmen - Lagom" && TvSubProducts[j] !== "Tv - Must Carry" && TvSubProducts[j] !== "Extra Tv-box") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 2 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 10 Mbit/s i Accesswitch"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning EXTRA 100 Mbit/s i Accesswitch" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 2 Mbit/s"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning Internet 10 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning Internet 100 Mbit/s"
                                    || FastighetSubProducts[j] === "Fastighetsstyrning Internet 1000 Mbit/s" || FastighetSubProducts[j] === "Fastighetsstyrning IP-VPN 2 Mbit/s") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FastighetServiceSubProducts[j] !== "Service mot faktura för Kabel-TV" && FastighetServiceSubProducts[j] !== "Service mot faktura"
                                    && FastighetServiceSubProducts[j] !== "Serviceavtal - Ej installerad bostad/lokal" && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Individuell installation"
                                    && FastighetServiceSubProducts[j] !== "Serviceavtal - Hårdvara - Kollektiv installation") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (BBTeleSubProducts[j] === "Bredband - 100 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 250 Mbit/s"
                                    || BBTeleSubProducts[j] === "Bredband - 500 Mbit/s" || BBTeleSubProducts[j] === "Bredband - 1000 Mbit/s"
                                    || BBTeleSubProducts[j] === "Telefoni" || BBTeleSubProducts[j] === "Installationshjälp"
                                    || BBTeleSubProducts[j] === "Trådlös Router F1x") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            //await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("AntalHushall")).toString());
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                            }
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                            await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                            await this.page.waitForTimeout(1000);
                            await this.page.keyboard.press('Tab');
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FLITOppenFiberSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (!(NewProductList).includes(Product[i])) {
                                if (FLITXLANSubProducts[j] === "FLIT - Lägenhetsanslutning") {
                                    await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input")).toHaveValue((TestData.get("ProductOfferQuantity")).toString());
                                }
                            }
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                var OTFText = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().textContent();
                                OTFText = OTFText.replace(/\s/g, '');
                                var OTF = OTFText.substring(0, OTFText.indexOf(",00kr"));
                                OTF = OTF - 100;
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@class,'currency')]//span[contains(@ng-class,'cpq-item-discount-price')]").first().click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item-no-children') and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if,'currency')]//button[@title='Change Price' or @title='' or @title='TBD']").click();
                                if (TestData.get("OTFNegotiationType") === "Amount") {
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@id='cpq-custom-adjustment-view-button' and not(@disabled)]").click();
                                    await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[not(@disabled)]//following-sibling::div//li//span[contains(text(),'" + TestData.get("OTFNegotiationType") + "')and not(@disabled)]").first().click();
                                }
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//input[@id='adjustment-input-01' and not(@ng-change)]").type(OTF.toString());
                                await this.page.frameLocator("//iframe[@title='accessibility title']").first().locator("//button[@type='button' and contains(@ng-click,'Adjustment') and contains(text(),'Ok')]").click();
                            } else {
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").clear();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Quantity')]//input").type((TestData.get("ProductOfferQuantity") + 2).toString());
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").click();
                                await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//..//..//..//div[contains(@ng-if, 'Requested_Price')]//input[@disabled='disabled']").hover();
                                await this.page.waitForTimeout(1000);
                                await this.page.keyboard.press('Tab');
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }


    async verifyExistingFAProductPricingLogicOnChildFA(TestData) {
        if (TestData.get("QuoteRecordType") !== "Offert - Skapa ett nytt Ramavtal") {
            await this.BlakalkylKalkyleraEBITSpara.click();
            await this.BlakalkylPrisTV.click();
            await this.page.waitForTimeout(5000);
            await this.page.reload();
        }
        const Product = (TestData.get("ExistingCommonFAProducts")).split(";");
        for (let i = 0; i < Product.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
            switch (Product[i]) {
                case "3play_100_Start":
                    {
                        const ThreePlayBB100StartSubProducts = (TestData.get("ThreePlayBB100StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StartSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_100_Bas":
                    {
                        const ThreePlayBB100BasSubProducts = (TestData.get("ThreePlayBB100BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100BasSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_100_Lagom":
                    {
                        const ThreePlayBB100LagomSubProducts = (TestData.get("ThreePlayBB100LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100LagomSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_100_Stor":
                    {
                        const ThreePlayBB100StorSubProducts = (TestData.get("ThreePlayBB100StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB100StorSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB100StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_250_Start":
                    {
                        const ThreePlayBB250StartSubProducts = (TestData.get("ThreePlayBB250StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StartSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_250_Bas":
                    {
                        const ThreePlayBB250BasSubProducts = (TestData.get("ThreePlayBB250BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250BasSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_250_Lagom":
                    {
                        const ThreePlayBB250LagomSubProducts = (TestData.get("ThreePlayBB250LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250LagomSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_250_Stor":
                    {
                        const ThreePlayBB250StorSubProducts = (TestData.get("ThreePlayBB250StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB250StorSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB250StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_500_Start":
                    {
                        const ThreePlayBB500StartSubProducts = (TestData.get("ThreePlayBB500StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StartSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_500_Bas":
                    {
                        const ThreePlayBB500BasSubProducts = (TestData.get("ThreePlayBB500BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500BasSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_500_Lagom":
                    {
                        const ThreePlayBB500LagomSubProducts = (TestData.get("ThreePlayBB500LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500LagomSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_500_Stor":
                    {
                        const ThreePlayBB500StorSubProducts = (TestData.get("ThreePlayBB500StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB500StorSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB500StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_1000_Start":
                    {
                        const ThreePlayBB1000StartSubProducts = (TestData.get("ThreePlayBB1000StartSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StartSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_1000_Bas":
                    {
                        const ThreePlayBB1000BasSubProducts = (TestData.get("ThreePlayBB1000BasSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000BasSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000BasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_1000_Lagom":
                    {
                        const ThreePlayBB1000LagomSubProducts = (TestData.get("ThreePlayBB1000LagomSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000LagomSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000LagomSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "3play_1000_Stor":
                    {
                        const ThreePlayBB1000StorSubProducts = (TestData.get("ThreePlayBB1000StorSubProducts")).split(";");
                        for (let j = 0; j < ThreePlayBB1000StorSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ThreePlayBB1000StorSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Tv":
                    {
                        const TvSubProducts = (TestData.get("TvSubProducts")).split(";");
                        for (let j = 0; j < TvSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TvSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Fastighet-FS":
                    {
                        const FastighetFSSubProducts = (TestData.get("FastighetFSSubProducts")).split(";");
                        for (let j = 0; j < FastighetFSSubProducts.length; j++) {
                            if (FastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || FastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3" || FastighetFSSubProducts[j] === "Grundavgift för Fastighetsstyrningstjänster") {
                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }

                        }
                        break;
                    }
                case "Fastighetsnät":
                    {
                        const FastighetSubProducts = (TestData.get("FastighetSubProducts")).split(";");
                        for (let j = 0; j < FastighetSubProducts.length; j++) {
                            if (FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber" || FastighetSubProducts[j] === "Byggnation av fastighetsnät Fiber - Lokal"
                                || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6" || FastighetSubProducts[j] === "Byggnation av fastighetsnät i CAT6 - Lokal"
                                || FastighetSubProducts[j] === "Installation av extra uttag i lägenhet/lokal" || FastighetSubProducts[j] === "Medieomvandlare"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig CAT6-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny CAT6-switch"
                                || FastighetSubProducts[j] === "Tillägg av port(ar) i befintlig Fiber-switch" || FastighetSubProducts[j] === "Tillägg av port(ar) i ny Fiber-switch") {
                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }

                        }
                        break;
                    }
                case "Hårdvara":
                    {
                        const HardvaraSubProducts = (TestData.get("HardvaraSubProducts")).split(";");
                        for (let j = 0; j < HardvaraSubProducts.length; j++) {
                            if (HardvaraSubProducts[j] === "Medieomvandlare" || HardvaraSubProducts[j] === "Trådlös Tv (1 st)"
                                || HardvaraSubProducts[j] === "Trådlös Tv (2 st)" || HardvaraSubProducts[j] === "Inspelningsbar Tv-box"
                                || HardvaraSubProducts[j] === "Fjärrkontroll (VIP1113)" || HardvaraSubProducts[j] === "Fjärrkontroll (VIP2853)"
                                || HardvaraSubProducts[j] === "Övrigt" || HardvaraSubProducts[j] === "Tv-switch" || HardvaraSubProducts[j] === "Strömadapter till CTS") {
                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HardvaraSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
                case "Fastighet-Service":
                    {
                        const FastighetServiceSubProducts = (TestData.get("FastighetServiceSubProducts")).split(";");
                        for (let j = 0; j < FastighetServiceSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FastighetServiceSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "BB & Tele":
                    {
                        const BBTeleSubProducts = (TestData.get("BBTeleSubProducts")).split(";");
                        for (let j = 0; j < BBTeleSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + BBTeleSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Zitius Fastighet-FS":
                    {
                        const ZitiusFastighetFSSubProducts = (TestData.get("ZitiusFastighetFSSubProducts")).split(";");
                        for (let j = 0; j < ZitiusFastighetFSSubProducts.length; j++) {
                            if (ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Fastighetstyrningsport" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 1"
                                || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 2" || ZitiusFastighetFSSubProducts[j] === "Installationsavgift för Etableringsport 3") {

                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + ZitiusFastighetFSSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Start":
                    {
                        const Halebop1000TvStartSubProducts = (TestData.get("Halebop1000TvStartSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvStartSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvStartSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Halebop 1000 & Tv-Bas":
                    {
                        const Halebop1000TvBasSubProducts = (TestData.get("Halebop1000TvBasSubProducts")).split(";");
                        for (let j = 0; j < Halebop1000TvBasSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + Halebop1000TvBasSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Telia B2B BB":
                    {
                        const TeliaB2BBBSubProducts = (TestData.get("TeliaB2BBBSubProducts")).split(";");
                        for (let j = 0; j < TeliaB2BBBSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + TeliaB2BBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Halebop BB":
                    {
                        const HalebopBBSubProducts = (TestData.get("HalebopBBSubProducts")).split(";");
                        for (let j = 0; j < HalebopBBSubProducts.length; j++) {
                            const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                            await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + HalebopBBSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                        }
                        break;
                    }
                case "Fiber Villa SDU Öppen Fiber":
                    {
                        const FiberVillaSDUOppenFiberSubProducts = (TestData.get("FiberVillaSDUOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUOppenFiberSubProducts.length; j++) {
                            if (FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 1,4" || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 5,8,13"
                                || FiberVillaSDUOppenFiberSubProducts[j] === "Installationsavgift SDU Öppen Fiber - Kategori 9,10") {

                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
                case "Fiber Villa SDU XLAN":
                    {
                        const FiberVillaSDUXLANSubProducts = (TestData.get("FiberVillaSDUXLANSubProducts")).split(";");
                        for (let j = 0; j < FiberVillaSDUXLANSubProducts.length; j++) {
                            if (FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 1-4" || FiberVillaSDUXLANSubProducts[j] === "Installationsavgift SDU XLAN - Kategori 5,8,13") {

                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FiberVillaSDUXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
                case "FLIT Öppen Fiber":
                    {
                        const FLITOppenFiberSubProducts = (TestData.get("FLITOppenFiberSubProducts")).split(";");
                        for (let j = 0; j < FLITOppenFiberSubProducts.length; j++) {
                            if (FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber" && FLITOppenFiberSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {

                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITOppenFiberSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
                case "FLIT XLAN":
                    {
                        const FLITXLANSubProducts = (TestData.get("FLITXLANSubProducts")).split(";");
                        for (let j = 0; j < FLITXLANSubProducts.length; j++) {
                            if (FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber" && FLITXLANSubProducts[j] !== "Anslutning Öppen Fiber Lokal") {

                            } else {
                                const MalPris = await this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[4]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]").textContent();
                                await expect(this.cartFrame.locator("//span[normalize-space(.)='" + Product[i] + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children custom-product-fiber-quote' and @ng-class and text()='" + FLITXLANSubProducts[j] + "']//ancestor::div[@class='cpq-item-base-product']//child::div[5]//child::div[1]//child::div[contains(@ng-if,'TeliaSE_Approved_Price__c')]")).toContainText((MalPris - 1).toString());
                            }
                        }
                        break;
                    }
            }
            //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + Product[i] + "']").click();
        }
    }



    async toggleSubOffersInProduct(ProductName, klusterName) {
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//button[normalize-space(.)='Toggle " + klusterName + "' and contains(@class,'slds-button')]").first().click();
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//button[normalize-space(.)='Toggle " + klusterName + "' and contains(@class,'slds-button')]//ancestor::div[@class='cpq-item-base-product']//following-sibling::div[@class='cpq-item-base-product-details']//child::div[@class='cpq-item-no-children']").first().click();
    }



    async configureMobileSpecialAddon(ProductName, klusterName, specialAddonName, approvalMandate, approvalFlag) {
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + klusterName + "')]//ancestor::div[@class='slds-is-relative']//div[text()='" + specialAddonName + "']").click();
        await this.page.waitForTimeout(5000);
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + klusterName + "')]//ancestor::div[@class='slds-is-relative']//div[text()='" + specialAddonName + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").hover();
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + klusterName + "')]//ancestor::div[@class='slds-is-relative']//div[text()='" + specialAddonName + "']//ancestor::div[@class='cpq-item-base-product']//div[contains(@ng-if,'Hybrid')]//*[contains(@icon,'settings') and contains(@size,'small') and contains(@class,'button')]").click();
        await this.cartFrame.locator("//table[@ng-if='IPResponseReceived']//tbody/tr[@ng-repeat='addOnPrice in addOnPrices']/td/input[@label='" + approvalMandate + "']").first().click();
        await this.cartFrame.locator("//button[@ng-click='savePrices()']").click();
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//span[contains(text(),'" + klusterName + "')]//ancestor::div[@class='slds-is-relative']//div[text()='" + specialAddonName + "']//..//..//..//img[contains(@src,'" + approvalFlag + "')]").click();
    }



    async AddToCartSubOffer(ProductName, SubProductName) {
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and text()='" + SubProductName + "']").first().click();
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and text()='" + SubProductName + "']//ancestor::div[@class='cpq-item-base-product']//button[contains(text(),'Lägg till')]").first().click();
        await this.cartFrame.locator("//span[normalize-space(.)='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-item']//div[contains(@class,'cpq-item') and contains(@class,'children') and text()='" + SubProductName + "']//ancestor::div[@class='cpq-item-base-product']//div[@class='cpq-product-icon-block']/div[@title='Add']").first().click();
        //await this.cartFrame.locator("//h2[contains(text(),'Tillagd tjänst: " + SubProductName + "')]").click();
    }


    async PerformProductConfiguration(TestData, ProductName) {
        //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + ProductName + "']").click();
        await this.cartFrame.locator("//span[text()='" + ProductName + "']//ancestor::div[@class='cpq-product-cart-alignment']//a[contains(@ng-click,'config')]").first().click({ timeout: 5000 });
        await this.configreKommentarTillAvtalshandlaggareTextarea.fill("Test Automation Comment - " + ProductName);
        switch (ProductName) {
            case "Mobilupplägg TOTAL":
                {
                    await expect(this.configureProductHelpText).toHaveText('Mobilportföljen är uppdelad i kluster. Inom varje kluster kan max två abonnemangstyper väljas. I kluster S, M, L, XL är en abonnemangstyp förvald. Denna går att byta ut manuellt. Kluster Bas och Plus måste aktivt väljas om abonnemangstyper från dessa ska vara inkluderade i avtalet.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configreSubsidizedPicklist.selectOption("Ja");
                    break;
                }
            case "Mobilupplägg All-IN+":
                {
                    await expect(this.configureProductHelpText).toHaveText('Mobilportföljen är uppdelad i kluster. Inom varje kluster kan max två abonnemangstyper väljas. I kluster S, M, L, XL är en abonnemangstyp förvald. Denna går att byta ut manuellt. Kluster Bas och Plus måste aktivt väljas om abonnemangstyper från dessa ska vara inkluderade i avtalet.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configreSubsidizedPicklist.selectOption("Ja");
                    break;
                }
            case "Microsoft 365":
                {
                    this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'showBundlesText') and contains(normalize-space(.),'Kan bundlas med:')]").first().click();
                    this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'showBundlesText') and contains(normalize-space(.),'Operator Connect')]").first().click();
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureBindingstidPicklist.selectOption("12 månader");
                    var productList;
                    productList = (TestData.get("Products")).split(";");
                    for (let i = 0; i < productList.length; i++) {
                        if (productList[i] === "Operator Connect") {
                            await this.configureSparaSavingButton.click();
                            await this.cartFrame.locator("//h2[contains(text(),'Golvpris sänks med ytterligare 2% vid bundling')]").first().click();
                            await this.page.waitForTimeout(20000);
                        }
                    }
                    break;
                }
            case "Touchpoint":
                {
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "Operator Connect":
                {
                    await expect(this.configureProductHelpText).toContainText('För att kunna använda Operator Connect krävs Microsoft-licensen Teams Phone Standard som tillägg för Enterprise E1/E3- eller Business-användare. Licensen ingår i Enterprise E5.');
                    //R23.04 - LTAART-395 - OC: Remove Telebonus in Amanda
                    //await expect(this.configureProductHelpText).toContainText('Operator Connect kräver att kunden har ett Telebonusavtal för trafikavgifter till Servicenummer och fasta användare. Du behöver säkerställa att kunden redan har ett Telebonusavtal, eller beställa ett nytt Telebonus i TUPP. Ta kontakt med Pre-Sales för att få hjälp med undersökning och hantering av Telebonusavtal. Läs mer om Telebonus i');
                    //await expect(this.configureProductHelpText).toContainText('Produktguiden');
                    this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'showBundlesText') and contains(normalize-space(.),'Kan bundlas med:')]").first().click();
                    this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'showBundlesText') and contains(normalize-space(.),'Microsoft 365')]").first().click();
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    var productList;
                    productList = (TestData.get("Products")).split(";");
                    for (let i = 0; i < productList.length; i++) {
                        if (productList[i] === "Microsoft 365") {
                            await this.configureSparaSavingButton.click();
                            await this.cartFrame.locator("//h2[contains(text(),'Golvpris sänks med ytterligare 2% vid bundling')]").first().click();
                            await this.page.waitForTimeout(20000);
                        }
                    }
                    break;
                }
            case "Smart Connect":
                {
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    //await this.configureValjMobilavtalPicklist.selectOption("Total med kluster i Salesforce");
                    //this.page.on('dialog', dialog => dialog.accept());
                    break;
                }
            case "TouchPoint Plus":
                {
                    await expect(this.configureProductHelpText).toContainText('Observera att en TPP-lösning alltid måste innehålla minst 20 användarpaket av typen Bas, Mobil eller Unified.');
                    await expect(this.configureProductHelpText).toContainText('Fyll i alla obligatoriska fält innan prissättning av TPP-tjänster påbörjas.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    const TPPAttributes = (TestData.get("TPPAttributes")).split(";");
                    await this.configureStatistikPicklist.selectOption(TPPAttributes[0]);
                    await this.configureKundanpassadkonfigurationPicklist.selectOption(TPPAttributes[1]);
                    if (TPPAttributes[1] == "Ja") {
                        await this.configureAlertBoxOkButton.click();
                    }
                    await this.configureTPPSlutanvandarsupportPicklist.selectOption(TPPAttributes[2]);
                    await this.configureADIntegrationPicklist.selectOption(TPPAttributes[3]);
                    await this.configureTeliaSvarsservicePicklist.selectOption(TPPAttributes[4]);
                    await this.configureWebkatalogPicklist.selectOption(TPPAttributes[5]);
                    await this.configureLagringstidForInspelningPicklist.selectOption(TPPAttributes[6]);
                    break;
                }
            case "IT-support Standard":
                {
                    await expect(this.configureProductHelpText).toContainText('OBS! Det maximala antalet användare (Antal för basnivå) för IT-support Standard är 250 st.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("ITSupportNumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "IT-support Plus":
                {
                    await expect(this.configureProductHelpText).toContainText('OBS! Det maximala antalet användare (Antal för basnivå) för IT-support Plus är 250 st.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("ITSupportNumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "IT-avdelning":
                {
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "IT-avdelning Start":
                {
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "Smart Säkerhet":
                {
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "SLUTANVÄNDARSUPPORT – 1:A LINJE MOBILT":
                {
                    await expect(this.configureProductHelpText).toContainText('Glöm inte att fylla i samma antal i offertkvantiteten som du konfigurerar nedan för att få en korrekt offert.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "SLUTANVÄNDARSUPPORT – 1:A LINJE MICROSOFT 365":
                {
                    await expect(this.configureProductHelpText).toContainText('Glöm inte att fylla i samma antal i offertkvantiteten som du konfigurerar nedan för att få en korrekt offert.');
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "SLUTANVÄNDARSUPPORT – 2:A LINJE MOBILT":
                {
                    await expect(this.configureProductHelpText).toContainText('Glöm inte att fylla i samma antal i offertkvantiteten som du konfigurerar nedan för att få en korrekt offert.');
                    await this.configreAntalArendenPicklist.selectOption("400");
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }
            case "SLUTANVÄNDARSUPPORT – 2:A LINJE MICROSOFT 365":
                {
                    await expect(this.configureProductHelpText).toContainText('Glöm inte att fylla i samma antal i offertkvantiteten som du konfigurerar nedan för att få en korrekt offert.');
                    await this.configreAntalArendenPicklist.selectOption("400");
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    break;
                }

            case "Övrigt":
                {
                    await this.configureAntalTextbox.clear();
                    await this.configureAntalTextbox.type(TestData.get("NumberOfUsers").toString());
                    break;
                }
            case "Bredband Start":
                {
                    await expect(this.configureProductHelpText).toContainText('Observera!');
                    await expect(this.configureProductHelpText).toContainText('- Alla accesser har en engångsavgift för anslutning (Primär/sekundär/backup), dessa finns under gruppen ”engångsavgifter” i varukorgen, vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.configureProductHelpText).toContainText('- Övriga engångsavgifter (t.ex. Arbete i fastighetsnät) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await this.configureTotalAntalSiterTextbox.clear();
                    await this.configureTotalAntalSiterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureRabattPaExternaStadsnatPicklist.selectOption("50 Kr/Månad");
                    await this.configureBindingstidPicklist.selectOption("24 månader");
                    break;
                }
            case "Bredband Plus":
                {
                    await expect(this.configureProductHelpText).toContainText('Kom ihåg att förhandla in priser för hastigheter som ni (säljare eller tillsammans med kund) ser att kund under avtalstiden kan ha behov av att avropa.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Observera!');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Alla accesser har en engångsavgift för anslutning (Primär/sekundär/backup), dessa finns under gruppen ”engångsavgifter” i varukorgen, vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Övriga engångsavgifter (t.ex. Arbete i fastighetsnät) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await this.configureTotalAntalSiterTextbox.clear();
                    await this.configureTotalAntalSiterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureBindingstidPicklist.selectOption("24 månader");
                    break;
                }
            case "Bredband Pro":
                {
                    await expect(this.configureProductHelpText).toContainText('Kom ihåg att förhandla in priser för hastigheter som ni (säljare eller tillsammans med kund) ser att kund under avtalstiden kan ha behov av att avropa.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Observera!');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Alla accesser har en engångsavgift för anslutning (Primär/sekundär/backup), dessa finns under gruppen ”engångsavgifter” i varukorgen, vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Övriga engångsavgifter (t.ex. Arbete i fastighetsnät) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await this.configureTotalAntalSiterTextbox.clear();
                    await this.configureTotalAntalSiterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureBindingstidPicklist.selectOption("24 månader");
                    break;
                }
            case "Cloud VPN Wifi/Lan":
                {
                    await expect(this.configureProductHelpText).toContainText('Om kunden har fler än tre Accesspunkter rekommenderas att en Site Survey Wifi läggs till för att garantera optimerad täckning.');
                    await expect(this.configureProductHelpText).toContainText('Kom ihåg att en switch/flera switchar behövs för att få fler portar för inkoppling om kunden har fler är tre Accesspunkter.');
                    await expect(this.configureProductHelpText).toContainText('Kom ihåg att lägga till installation om kunden har behov av detta.');
                    await expect(this.configureProductHelpText).toContainText('Om kunden har behov av utökad SLA rekommenderas att Proaktiv start av larmhantering erbjuds.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Observera!');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- All hårdvara (Accesspunkter/Switch/Wired/Wireless) har en engångsavgift för anslutning, dessa finns under gruppen ”engångsavgifter” i varukorgen. Vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Övriga engångsavgifter (t.ex. Installation av hårdvara) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await this.configureAntalAccessPunkterTextbox.clear();
                    await this.configureAntalAccessPunkterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAntalSwitcharTextbox.clear();
                    await this.configureAntalSwitcharTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureBindingstidPicklist.selectOption("36 månader");
                    break;
                }
            case "Cloud VPN SD-Wan/Firewall":
                {
                    await expect(this.configureProductHelpText).toContainText('Observera!');
                    await expect(this.configureProductHelpText).toContainText('- All hårdvara (Accesspunkter/Switch/Wired/Wireless) har en engångsavgift för anslutning, dessa finns under gruppen ”engångsavgifter” i varukorgen. Vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.configureProductHelpText).toContainText('- Övriga engångsavgifter (t.ex. Installation av hårdvara) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Kom ihåg att lägga till installation om kunden har behov av detta.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Om kunden har behov av utökad SLA rekommenderas att Proaktiv start av larmhantering erbjuds.');
                    await this.configureTotalAntalSiterTextbox.clear();
                    await this.configureTotalAntalSiterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureBindingstidPicklist.selectOption("36 månader");
                    break;
                }
            case "Datanet":
                {
                    await expect(this.configureProductHelpText).toContainText('Kom ihåg att förhandla in priser för hastigheter som ni (säljare eller tillsammans med kund) ser att kund under avtalstiden kan ha behov av att avropa.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('Observera!');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Alla accesser har en engångsavgift för anslutning (Primär/sekundär/backup), dessa finns under gruppen ”engångsavgifter” i varukorgen, vilken engångsavgift vi tar ut av kunden bestäms av bindningstiden för respektive produkt.');
                    await expect(this.cartFrame.locator("//div[@class='slds-grid slds-grid--vertical cpq-product-cart-config']//div[contains(@ng-if,'config')]/p/b").nth(1)).toContainText('- Övriga engångsavgifter (t.ex. Arbete i fastighetsnät) visas som engångsavgift på produktraden och påverkas inte av bindningstiden');
                    await this.configureTotalAntalSiterTextbox.clear();
                    await this.configureTotalAntalSiterTextbox.type(TestData.get("NumberOfUsers").toString());
                    await this.configureAvtalstidPicklist.selectOption("36 månader");
                    await this.configureBindingstidPicklist.selectOption("36 månader");
                    break;
                }
        }
        await this.configureSparaSavingButton.click();
        await this.cartFrame.locator("//h2[contains(text(),'Uppdaterad tjänst: " + ProductName + "')]").click();
        await this.configureCloseButton.click();
        //await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + ProductName + "']").click();
    }


    async VerifyProductConfigurationDisabled(TestData) {
        var productList;
        productList = (TestData.get("ExistingProducts")).split(";");
        await this.page.reload();
        for (let i = 0; i < productList.length; i++) {
            await this.cartFrame.locator("//span[@class='cpq-product-name' and text()='" + productList[i] + "']//ancestor::div[@class='cpq-product-name-block']//child::div[@class='cpq-product-icon-block' and contains(@ng-if,'lockItems')]").click();
            await this.cartFrame.locator("//span[text()='" + productList[i] + "']//ancestor::div[@class='cpq-product-cart-alignment']//a[contains(@ng-click,'config')]").first().click({ timeout: 5000 });
            await this.cartFrame.locator("//button[normalize-space(.)='Spara Saving' and @disabled='disabled']").hover();
            if (productList[i] === "Mobilupplägg TOTAL" || productList[i] === "Mobilupplägg All-IN+") {
                await this.cartFrame.locator("//button[contains(normalize-space(.),'Abonnemangsunika tillvalstjänster')]").first().click();
                await this.cartFrame.locator("//div[text()='Abonnemangsunika tillvalstjänster']").first().click();
                await this.cartFrame.locator("//button[text()='Återställ' and @disabled='disabled']").first().hover();
                await this.page.waitForTimeout(2000);
                await this.cartFrame.locator("//button[text()='Stäng' and @ng-click='closeModal()']").first().click();
            }
            await this.configureCloseButton.click();
        }
    }


    async PerformValideraPriserAndVerifyApprovalFlags(TestData) {
        await this.cartValideraVarukorgenButton.click({ timeout: 5000 });
        if(TestData.get("SalesFlowType") === "Inforhandling"){
            await this.page.waitForTimeout(10000);
        }
        if (TestData.get("WithinUserMandate") !== "WithinSalesRepMandate") {
            const SubProductsForApproval = (TestData.get("SubProductsForApproval")).split(";");
            for (let iteration = 0; iteration < SubProductsForApproval.length; iteration++) {
                await this.cartFrame.locator("//div[@class='cpq-product-cart-item']//div[@class='cpq-item-no-children' and @ng-class and text()='" + SubProductsForApproval[iteration] + "']//..//..//..//img[contains(@src,'Sad')]").first().click();
            }
        }
    }


    async PerformSlutforKonfigurationAndQuoteApproval(TestData, OpportunityName) {
        const Products = (TestData.get("Products")).split(";");
        await this.cartSlutforKonfiguration.click();
        if (TestData.get("SalesFlowType") !== "Tillaggsforhandling" && TestData.get("SalesFlowType") !== "Inforhandling") {
            await this.andraAvtalsvillkorHeading.click();
            await this.andraAvtalsvillkorDisplayMessage1.click();
            await this.andraAvtalsvillkorDisplayMessage2.click();
            if (TestData.get("NegotiateCustomerUniqueTerms") === "Yes") {
                await this.andraAvtalsvillkorJaCheckbox.click();
            }
        }
        for (let iteration = 0; iteration < Products.length; iteration++) {
            if (Products[iteration] === "Bredband Plus" || Products[iteration] === "Bredband Start"
                || Products[iteration] === "Bredband Pro" || Products[iteration] === "Cloud VPN SD-Wan/Firewall"
                || Products[iteration] === "Datanet" || Products[iteration] === "Cloud VPN Wifi/Lan") {
                await this.page.getByText('Volymåtagande för Nätverkstjänster').click();
                await this.page.getByText('Totalt antal siter för volymåtagande gällande nätverkstjänster').click();
                await this.page.locator("//vlocity_cmt-omniscript-text[@data-omni-key='Input_Volume']//child::input").clear();
                await this.page.locator("//vlocity_cmt-omniscript-text[@data-omni-key='Input_Volume']//child::input").type('30');
                await this.page.getByText('Totalt antal siter för volymåtagande gällande nätverkstjänster').click();
                if (TestData.get("SalesFlowType") === "Tillaggsforhandling") {
                    await this.nextSwedishButton.click();
                }
                break;
            }
        }
        if (TestData.get("SalesFlowType") !== "Tillaggsforhandling" && TestData.get("SalesFlowType") !== "Inforhandling") {
            await this.nextSwedishButton.click();
            if (TestData.get("NegotiateCustomerUniqueTerms") === "Yes") {
                await this.page.getByRole('heading', { name: 'Ändra kundunika avtalsvillkor' }).click();
                await this.page.getByText('Betalningsvillkor (').click();
                //R23.04 - LTAT-25578 - Sales stop of TP Offering in AMANDA
                //await expect(this.page.locator('c-text-block-for-change-customer-terms')).toContainText('- Kundens betalningsvillkor kan endast förhandlas för Jobbmobil, Touchpoint, Touchpoint Plus, Smart Connect, Operator Connect och Nätverkstjänster.');
                //await expect(this.page.getByRole('article')).toContainText('Fakturaavgift: (gäller enbart Jobbmobil, Touchpoint, Smart Connect och Operator Connect)');
                await expect(this.page.locator('c-text-block-for-change-customer-terms')).toContainText('- Kundens betalningsvillkor kan endast förhandlas för Jobbmobil, Touchpoint Plus, Smart Connect, Operator Connect och Nätverkstjänster.');
                await expect(this.page.locator('c-text-block-for-change-customer-terms')).toContainText('- Efter signerat avtal för Touchpoint Plus och Nätverkstjänster krävs att formulär ”Underlag Billing” fylls i och skickas in av dig som säljare.');
                await expect(this.page.getByRole('article')).toContainText('Fakturaavgift: (gäller enbart Jobbmobil, Smart Connect och Operator Connect)');
                await this.page.getByLabel('Benchmarkingtext i avtal Help').click();
                await this.page.getByLabel('Fakturaavgift Help Text').click();
                await this.page.getByLabel('Indexklausul Help Text').click();
                await this.page.locator("//span[text()='45 dagar']//preceding-sibling::span[@class='slds-radio_faux']").click();
                await this.page.locator("//vlocity_cmt-omniscript-text[@data-omni-key='PaymentTermsNotes']//input").type("Test PaymentTermsNotes");
                await this.page.locator("//vlocity_cmt-omniscript-radio[@data-omni-key='InvoiceFeeOption']//span[text()='Nej']//preceding-sibling::span[@class='slds-radio_faux']").click();
                await this.page.locator("//vlocity_cmt-omniscript-text[@data-omni-key='InvoiceNotes']//input").type("Test InvoiceNotes");
                await this.page.locator("//vlocity_cmt-omniscript-radio[@data-omni-key='BenchmarkingAgreementOptions']//span[text()='Ja']//preceding-sibling::span[@class='slds-radio_faux']").click();
                await this.page.locator("//vlocity_cmt-omniscript-text[@data-omni-key='BenchmarkingAgreementNotes']//input").type("Test BenchmarkingAgreementNotes");
                await this.page.locator("//vlocity_cmt-omniscript-radio[@data-omni-key='IndexationClauseOptions']//span[text()='Nej']//preceding-sibling::span[@class='slds-radio_faux']").click();
                await this.nextSwedishButton.click();
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//table//tbody//tr[1]/td[3][text()='45 dagar']").click();
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//table//tbody//tr[2]/td[3][text()='Nej']").click();
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//table//tbody//tr[3]/td[3][text()='Ja']").click();
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//table//tbody//tr[4]/td[3][text()='Nej']").click();
            }
        }
        if (TestData.get("WithinUserMandate") != "WithinSalesRepMandate") {
            for (let iteration = 0; iteration < Products.length; iteration++) {
                if (Products[iteration] !== "IT-support Standard" && Products[iteration] !== "IT-support Plus" && Products[iteration] !== "Smart Säkerhet" && Products[iteration] !== "Försäkring Mobiltelefon" && Products[iteration] !== "Övrigt") {
                    await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//div[@class='widthcontrol']/table/tbody/tr/td[1]/b[text()='" + Products[iteration] + "']").click();
                }
            }
            const SubProductsForApproval = (TestData.get("SubProductsForApproval")).split(";");
            for (let iteration = 0; iteration < SubProductsForApproval.length; iteration++) {
                //R23.04 - LTAART-410 - Grouping and sequencing in approval table
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//div[@class='widthcontrol']/table/tbody//td[1 and contains(normalize-space(.),'" + SubProductsForApproval[iteration] + "')]").first().click();
                //R24.05 - LTAART-321 - Negotiate minute based fees
                if (SubProductsForApproval[iteration] === "Norden") {
                    await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//div[@class='widthcontrol']/table//th[text()='Engångsavgift (golvpris) / *öppningsavgift']").hover();
                    await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='LWC_ApprovalTable']//div[@class='widthcontrol']/table//th[text()='Månadsavgift (golvpris) / *minutavgift']").hover();
                }
            }
            const fileChooserPromise = this.page.waitForEvent('filechooser');
            await this.page.locator("//vlocity_cmt-omniscript-file[@data-omni-key='Input_File']//input[@type='file']//following-sibling::label/span").first().click();
            const fileChooser = await fileChooserPromise;
            await fileChooser.setFiles('./resources/TestDataFiles/Avtal_Telia_RiksbyggenBostadsrattsforeningTorpet.pdf');
            await this.page.locator("//span[text()='Klart']").click();
            await this.page.locator("//span[text()='Avtal_Telia_RiksbyggenBostadsrattsforeningTorpet.pdf']").click();
            await this.page.locator("//vlocity_cmt-omniscript-textarea[@data-omni-key='Input_Comment']//textarea").type("Test Automation Comment For Approval");
            await this.page.locator("//button[@aria-label='Skicka för godkännande']").first().click();
            await expect(this.quoteStatusText).toHaveText("Skickat för godkännande");
        } else {
            await expect(this.quoteStatusText).toHaveText("Priser godkända");
        }
    }


    async enterBlakalkylDetails(TestData, OpportunityName) {
        if (TestData.get("WithinUserMandate") !== "WithinSalesDirectorMandate" && TestData.get("QuoteRecordType") !== "Offert - Skapa ett nytt Ramavtal") {
            await this.BlakalkylRevenues.fill("2101901");
            await this.BlakalkylOpex.fill("110000,50");
            await this.BlakalkylInfra.fill("21,50");
            await this.BlakalkylContractTerm.fill("5");
            await this.BlakalkylUpsell.fill("1965533");
            await this.BlakalkylDepreciation.fill("128659");
            await this.BlakalkylKundplacerad.fill("-30");
            await this.Blakalkyldcf.fill("65");
            await this.BlakalkylInvestment.fill("54");
            await this.BlakalkylPayback.fill("7");
            await this.Blakalkylengang.fill("90000");
            await this.BlakalkylPrisBB.fill("0");
            await this.BlakalkylPrisTV.fill("0");
        }
    }


    async PerformGaVidareAndQuoteApproval(TestData) {
        if (TestData.get("QuoteRecordType") !== "Offert - Skapa ett nytt Ramavtal") {
            await this.BlakalkylKalkyleraEBITSpara.click();
            await this.BlakalkylPrisTV.click();
            await this.page.waitForTimeout(5000);
        }
        await this.BlakalkylGaVidare.click();
        if (TestData.get("WithinUserMandate") != "WithinSalesRepMandate") {
            await this.page.getByRole('heading', { name: 'Ansökan om godkännande av pris' }).click();
            await this.page.getByText('Det finns produkter som har').click();
            const Products = (TestData.get("Products")).split(";");
            for (let iteration = 0; iteration < Products.length; iteration++) {
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='CustomLWC2']//table/tr/td[1]/div[contains(text(),'" + Products[iteration] + "')]").first().click();
            }
            const SubProductsForApproval = (TestData.get("SubProductsForApproval")).split(";");
            for (let iteration = 0; iteration < SubProductsForApproval.length; iteration++) {
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='CustomLWC2']//table/tr/td[1]/div[contains(text(),'" + SubProductsForApproval[iteration] + "')]").first().click();
            }
            let BlakalkylIsNotNullOrEmpty = Boolean(TestData.get("BlakalkylValues"));
            if (BlakalkylIsNotNullOrEmpty) {
                const BlakalkylValues = (TestData.get("BlakalkylValues")).split(";");
                await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='CustomLWC1']//table//tbody/tr[1]/td[1]/div[contains(text(),'" + BlakalkylValues[0] + "')]").first().click();
                for (let iteration = 3; iteration <= BlakalkylValues.length; iteration++) {
                    await this.page.locator("//vlocity_cmt-omniscript-custom-lwc[@data-omni-key='CustomLWC1']//table//tbody/tr[1]/td[" + iteration + "]/div[contains(text(),'" + BlakalkylValues[iteration - 2] + "')]").first().click();
                }
            }
            await this.page.getByLabel('KOMMENTARER').fill('Test Automation');
            await this.page.getByRole('button', { name: 'Skicka för godkännande' }).click();
            await this.page.locator('lightning-formatted-text').filter({ hasText: 'Skickat för godkännande' }).click();
        } else {
            await this.page.waitForTimeout(5000);
            await this.page.reload();
            await this.quoteStatusText.click();
            await expect(this.quoteStatusText).toHaveText("Priser godkända");
        }
    }


    async VerifyCRMFiberProductIsNotVisibleInTheCart(TestData) {
        var ProductName;
        if (TestData.get("Varumarke") === "Telia KO") {
            ProductName = "Halebop BB";
        } else if (TestData.get("Varumarke") === "Telia KO-Skanova") {
            ProductName = "Zitius Fastighet-FS";
        } else if (TestData.get("Varumarke") === "Zitius") {
            ProductName = "3play_100_Start";
        } else if (TestData.get("Varumarke") === "Halebop") {
            ProductName = "Fiber Villa SDU Öppen Fiber";
        }
        await this.page.frameLocator('iframe[name*="vfFrameId"]').first().getByPlaceholder('Sök').click();
        await this.page.frameLocator('iframe[name*="vfFrameId"]').first().getByPlaceholder('Sök').fill(ProductName);
        await this.page.frameLocator('iframe[name*="vfFrameId"]').first().locator("//div[@class='cpq-product-list']//div[contains(text(),'No products available.')]").click();
        expect(await this.page.frameLocator('iframe[name*="vfFrameId"]').first().locator("//p[normalize-space(.)='" + ProductName + "']//..//..//..//button[normalize-space(.)='Lägg till']").count()).toEqual(0);
    }


}
module.exports = { FACartPage };